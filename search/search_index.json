{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#our-mission","title":"Our mission","text":"<p>Our mission is to make it easy to incorporate data privacy and protection for the management of sensitive data (PII) throughout your organisation.</p> <p>To preserve the privacy of your data, it first needs to be protected. The Onqlave alpha release enables you to easily create and manage a personal data store within your applications.</p>"},{"location":"#what-will-you-get","title":"What will you get?","text":"<p>Users of the platform will be able to achieve a distributed trust architecture for the protection of your customer data. By implementing the steps outlined in this documentation, you will be able to protect your data before it leaves your application, meaning neither your cloud users (or Onqlave!) will be able to see it in plain text.</p>"},{"location":"#how-can-we-achieve-it","title":"How can we achieve it?","text":"<p>The design ensures data is never exposed to those without access, while reducing the reliance on your cloud provider, as this alone is not enough to prevent attackers and inside threats.</p> <p>Our tools are designed to help you achieve protection with minimal effort. We have developed and tested quick workflows in our WebApp and CLI, to enable your engineers to rapidly protect and continually manage your data.</p> <p>We have designed Onqlave to be resilient, performant and scalable, whilst minimising the complexities of key management and cryptography.</p>"},{"location":"#we-value-your-feedback","title":"We value your feedback","text":"<p>We are excited for you to be part of the Onqlave alpha release. We have been working towards delivering initial features which will form the foundation of an extensive suite of data protection and privacy capabilities in the near future.</p> <p>On the bottom right corner of any menu, you can see the Provide Feedback button.</p> <p></p> <p>By clicking on it, a dialog will appear and let you enter your own comments and thoughts on which part of our product that needs to be improved.</p> <p></p> <p>In addition, we welcome any and all feedback you have either through WebApp or at product@onqlave.com.</p>"},{"location":"external-sources/architecture/","title":"Introduction","text":"<p>The Onqlave Encryption Engine (OE2) is a set of infrastructure and SDKs provided to you as a service, letting you easily and efficiently encrypt sensitive data in your platform before it leaves your security boundaries. The Onqlave Encryption Engine (OE2) provides you with a state of the art cloud agnostic key management solution which simplifies the daunting task of managing your encryption keys whilst providing you with the best practices when it comes to protecting your sensitive data. You specify which primitive you would like to use based on your use case and leave the rest to us. We manage the master encryption key, issue data encryption keys, wrap them with proper keys without storing any of the keys on our platform. You then use our provided SDKs which securely connect to our infrastructure to get the keys, and encrypt and sign to ensure the authenticity of your data. Using our technology helps ensure that your plaintext data isn\u2019t available to any third party, including Onqlave, your cloud or infrastructure provider.</p> <p>This developer guide provides a conceptual overview of the Onqlave Encryption Engine (OE2), including an introduction to its architecture, details about how it protects your data, how it differs from server-side encryption, and guidance on selecting critical components for your application to help you get started.</p>"},{"location":"external-sources/architecture/#benefits","title":"Benefits","text":"<p>The Onqlave Encryption Engine (OE2) has the following benefits:</p> <ul> <li> <p>Designed especially for security and ease of use. You don\u2019t need to be a cryptography expert to use the Onqlave Encryption Engine (OE2). The implementations include helper methods that are designed to work with your existing applications. After you create and configure the required components, the SDKs transparently encrypts and signs your data before you store them in your storage, and verifies and decrypts them when you retrieve them.</p> </li> <li> <p>Designed to be infrastructure and cloud agnostic. When you use the Onqlave Encryption Engine (OE2), you are not bound to a specific cloud provider or specific implementation by a cloud provider as it is delivered as a service (think of it as any other <code>software as a service</code> you use). you can integrate it with any application, whether in cloud or on-premise, developed in any technology of your choice. We are building SDKs for majority of the mainstream programming languages.</p> </li> <li> <p>Includes secure encryption and signing. The Onqlave Encryption Engine (OE2) includes secure implementations that encrypt your data using a unique data encryption key, and then sign data to protect it against unauthorised changes.</p> </li> <li> <p>Uses cryptographic materials provided by the Onqlave platform.  The Onqlave Encryption Engine (OE2) uses Onqlave crypto infrastructure to generate, encrypt, and decrypt the unique data encryption key that protects your sensitive data. We automatically issue wrapping keys that encrypt that data key. The Onqlave Encryption Engine (OE2) frees you from cloud restriction as it doesn't require an AWS, GCP or Azure account or any service provided by them.</p> </li> <li> <p>Support for cryptographic materials caching (coming soon). The Onqlave Encryption Engine (OE2) provides a bespoke key caching solution that reduces the number of calls to our infrastructure. It allows you to protect your cryptographic materials under a symmetric encryption key without calling Onqlave infrastructure every time you encrypt or decrypt data. This is a good choice for applications that need to minimise latency in their encryption process.</p> </li> <li> <p>Format Preserving Encryption (FPE) (coming soon). You can design databases that can search encrypted records without decrypting the entire database. Depending on your threat model and requirements, you can use FPE to perform exact match searches or more customised complex queries on your encrypted database.</p> </li> <li> <p>Support for multitenant database schemas. The Onqlave Encryption Engine (OE2) enables you to protect data stored in your platform by isolating each tenant with distinct encryption materials. If you have multiple customers performing encrypt operations within your platform, use different Onqlave Arx to provide each customer with a distinct material to use in their cryptographic operations.</p> </li> <li> <p>End-to-end encryption. Everything in your Onqlave Encryption Engine (OE2) account is always end-to-end encrypted. This makes it impossible for someone to learn anything by intercepting your data while it\u2019s in transit or even obtaining it from Onqlave.</p> </li> <li> <p>256-bit AES encryption. Your data is kept safe by <code>AES-GCM-256 authenticated encryption</code> on the Onqlave Encryption Engine (OE2). The data you entrust to Onqlave is effectively impossible to decrypt.</p> </li> <li> <p>Secure random numbers. Encryption keys, initialization vectors, and nonces are all generated using <code>cryptographically secure pseudorandom number generators</code>.</p> </li> <li> <p>Principled privacy policy. The Onqlave Encryption Engine (OE2) was designed with a deep respect for your privacy. Any information you share with us is only ever used to provide you with service and support.</p> </li> </ul>"},{"location":"external-sources/architecture/#concepts","title":"Concepts","text":"<p>This topic explains the concepts and terminology used in the Onqlave Encryption Engine (OE2).</p>"},{"location":"external-sources/architecture/#envelope-encryption","title":"Envelope encryption","text":"<p>Storing and encrypting data at scale requires using a central cryptographic key management service with multiple layers of keys for the encrypted data. An example of multiple layer of keys is envelope encryption, which is the process of encrypting a key with another key. The Onqlave Encryption Engine (OE2) uses Master encryption keys (MEK) to protect Data encryption keys. The Onqlave Encryption Engine (OE2) uses Polymorphic encryption to ensure that every encryption gets its own unique Data encryption keys.</p>"},{"location":"external-sources/architecture/#data-encryption-key","title":"Data encryption key","text":"<p>A data encryption key is an encryption key that the Onqlave Encryption Engine (OE2) SDK uses to encrypt the data. Each data encryption key is a byte array that conforms to the encryption method of your Onqlave Arx. You don't need to specify, generate, implement, extend, protect, or use data encryption keys. The Onqlave Encryption Engine (OE2) implicitly does that work for you when you call the encrypt and decrypt operations.</p>"},{"location":"external-sources/architecture/#master-encryption-key","title":"Master encryption key","text":"<p>A Master encryption key, also known as key encryption key is a key that the Onqlave Encryption Engine (OE2) uses to encrypt the Data encryption keys that encrypts your data.</p>"},{"location":"external-sources/architecture/#symmetric-and-asymmetric-encryption","title":"Symmetric and asymmetric encryption","text":"<p>Symmetric encryption uses the same key to encrypt and decrypt data. Asymmetric encryption uses a mathematically related data key pair. One key in the pair encrypts the data; only the other key in the pair can decrypt the data. The Onqlave Encryption Engine (OE2) uses envelope encryption. It encrypts your data with a symmetric data key. It encrypts the symmetric data key with one or more symmetric or asymmetric wrapping keys.</p> <ul> <li>Encrypting your data (symmetric encryption): To encrypt your data, the Onqlave Encryption Engine (OE2) SDK uses a symmetric data key and an algorithm specified by your configuration of Onqlave Arx that includes a symmetric encryption algorithm. To decrypt the data, the Onqlave Encryption Engine (OE2) SDK uses the same data key and the same algorithm suite.</li> </ul>"},{"location":"external-sources/architecture/#polymorphic-encryption","title":"Polymorphic encryption","text":"<p>The Onqlave Encryption Engine (OE2) makes sure every encryption operation gets its own unique Data encryption key to preserve the security and privacy of your data. The technique is called <code>Polymorphic encryption</code>.</p>"},{"location":"external-sources/architecture/#encryption-primitives","title":"Encryption primitives","text":"<p>Authenticated Encryption (AE) is an encryption scheme which simultaneously assures the data confidentiality (also known as privacy: encrypted message is impossible to understand without the knowledge of a secret key) and authenticity (it is unforgeable the encrypted message includes an authentication tag that the sender can calculate only if she possesses secret key). Examples of encryption modes that provide AE are GCM, CCM. The Onqlave Encryption Engine (OE2) and extended version of AE called Authenticated Encryption with Additional Data (AEAD) in order to create Data encryption keys. Additional Authenticated Data (AAD) is bound to the encrypted data, because you cannot decrypt the ciphertext unless you know the AAD, but it is not stored as part of the ciphertext. AAD also does not increase the cryptographic strength of the ciphertext. Instead it is an additional check by The Onqlave Encryption Engine (OE2) SDK to authenticate a decryption request. The Onqlave Encryption Engine (OE2) SDK uses Authenticated Encryption with Additional Data (AEAD) for all encryption operations, so that it guarantees the confidentiality as well as the integrity of the keys provided for each tenant.  </p>"},{"location":"external-sources/architecture/#how-it-works","title":"How it works","text":"<p>As explained in the Introduction, The Onqlave platform is comprised of two major parts: The Onqlave Encryption Engine (OE2) which is responsible for managing your keys, and The Onqlave Encryption Engine (OE2) SDK which is used to integrate OE2 with your applications.  </p> <p>The Onqlave Encryption Engine (OE2) SDK provides client-side encryption libraries that are designed specifically to protect your sensitive data. The libraries include secure implementations that you can extend or use unchanged. For more information about using SDKs, see our SDK documentation for your programming language.</p> <p>The workflows in this section explain how the Onqlave Encryption Engine (OE2) SDK encrypts and signs and decrypts and verifies the data in your applications. These workflows describe the basic process using abstract elements and the default features. For details about how the Onqlave Encryption Engine (OE2) SDK works with your programming language, see our GitHub repositories.</p> <p>The Onqlave Encryption Engine (OE2) SDK uses envelope encryption to protect your data. Each record is encrypted under a unique data encryption key provided by the Onqlave platform. To decrypt the encrypted record, the Onqlave Encryption Engine (OE2) SDK communicates with the Onqlave platform to decrypt the data encryption key using the master encryption keys assigned to the Onqlave Arx. Then it can decrypt the ciphertext and return a plaintext entry.</p> <p>For more information about the terms used in the Onqlave Encryption Engine, see Concepts.</p>"},{"location":"external-sources/architecture/#encrypt-and-sign","title":"Encrypt and sign","text":"<p>At its core, the Onqlave Encryption Engine (OE2) SDK is a record encryptor that encrypts, signs, verifies, and decrypts the records in your dataset. It gets the encryption materials, and instructions on how to use them, from the Onqlave platform and uses them to encrypt the data.</p> <p>The following walkthrough describes how the Onqlave Encryption Engine (OE2) SDK encrypts and signs your data entries.</p> <ol> <li>The Onqlave platform provides the Onqlave Encryption Engine (OE2) SDK with unique data encryption key: one wrapped data encryption key, a copy of the data key encrypted wrapped in an ephemeral encrypted asymmetric key.</li> <li>The encryption method encrypts data you specified.</li> <li>The encryption method encapsulates the encrypted data encryption key, algorithm information and the actual cipher data in a data encryption packet.</li> <li>The encryption method signs the data encyption packet using additional data provided by you.</li> <li>The encryption method returns the encrypted and signed cipher packet to the caller.  </li> </ol>"},{"location":"external-sources/architecture/#decrypt-and-verify","title":"Decrypt and verify","text":"<ol> <li>The decryption method extracts the encrypted data encryption key from cipher packet.</li> <li>The decryption method extracts the encryption algorithm including initialisation vector and tags</li> <li>The decryption method contacts the Onqlave platform to decrypt the encrypted data encryption key.</li> <li>The Onqlave platform returns the data encryption key, wrapped in an ethemeral encrypted assymetric key.</li> <li>The decryption method identifies the data in the cipher packet received as input.</li> <li>The decryption method unwraps the data encryption key, and use it to decrypt the data.</li> <li>The decryption method verifies the integrity of the data using additional data provided by you.</li> <li>The decryption method returns the decrypted and verified plain data to the caller.  </li> </ol>"},{"location":"external-sources/architecture/#reporting-a-vulnerability","title":"Reporting a Vulnerability","text":"<p>If you discover a potential security issue in this project, please reach out to us at security@onqlave.com. Please do not create public GitHub issues or Pull Requests, as malicious actors could potentially view them.</p>"},{"location":"external-sources/sdk-go/","title":"Description","text":"<p>This go SDK is designed to help developers easily integrate Onqlave <code>Encryption As A Service</code> into their go backend.</p> <p> </p>"},{"location":"external-sources/sdk-go/#table-of-contents","title":"Table of Contents","text":"<ul> <li>Description</li> <li>Table of Contents<ul> <li>Features</li> <li>Installation<ul> <li>Requirements</li> <li>Configuration</li> <li>Usage</li> <li>Encrypt</li> <li>Decrypt</li> <li>Encrypt Stream</li> <li>Decrypt Stream</li> </ul> </li> <li>Reporting a Vulnerability</li> </ul> </li> </ul>"},{"location":"external-sources/sdk-go/#features","title":"Features","text":"<ul> <li>Encrypt/Decrypt piece of information</li> <li>Encrypt/Decrypt stream of data</li> </ul>"},{"location":"external-sources/sdk-go/#installation","title":"Installation","text":""},{"location":"external-sources/sdk-go/#requirements","title":"Requirements","text":"<ul> <li>go 1.18 and above</li> </ul>"},{"location":"external-sources/sdk-go/#configuration","title":"Configuration","text":"<p>Make sure your project is using Go Modules (it will have a go.mod file in its root if it already is):</p> <pre><code>go mod init\n</code></pre> <p>Then, reference onqlave-go in a Go program with import:</p> <pre><code>import (\n  onqlave \"github.com/onqlavelabs/onqlave-go\"\n)\n</code></pre> <p>Alternatively, <code>go get github.com/onqlavelabs/onqlave-go</code> can also be used to download the required dependencies</p>"},{"location":"external-sources/sdk-go/#usage","title":"Usage","text":"<p>To use this SDK, you firstly need to obtain credential to access an Onqlave Arx by signing up to Onqlave and following instruction to create your 1st Onqlave Arx. Documentation can be found at Onqlave Technical Documentation.</p> <p>The Onqlave Go module is used to perform operations on the configured ARX such as encrypting, and decrypting for an Onqlave_ARX. example:</p> <p>To use this module, the Onqlave client must first be initialized as follows.</p> <pre><code>import (\n    \"github.com/onqlavelabs/onqlave-go/onqlave/onqlaveconnection\"\n    \"github.com/onqlavelabs/onqlave-go/onqlave/onqlavecredentials\"\n    \"github.com/onqlavelabs/onqlave-go/onqlave/onqlaveencryption\"\n)\n\ndebugOption := onqlaveencryption.WithDebug(true) //This option lets you choose whether to start SDK operation in debug mode to info mode\narxOption := onqlaveencryption.WithArx(\"&lt;arx_url&gt;\") //This is the Arx URL retruned of the API Key created during setup. Keep in in a safe place.\ncredentialOption := onqlaveencryption.WithCredential(onqlavecredentials.Credential{\n    AccessKey:  \"&lt;api_access_key&gt;\",   //This is the API Access Key returned of the API Key created during setup. Keep in in a safe place.\n    SigningKey: \"&lt;api_signing_key&gt;\",  //This is the API Signing Key retruned of the API Key created during setup. Keep in in a safe place.\n    SecretKey:  \"&lt;api_secret_key&gt;\",   //This is the API Secret Key retruned of the API Key created during setup. Keep in in a safe place.\n})\nretryOption := onqlaveencryption.WithRetry(onqlaveconnection.RetrySettings{\n    Count:       &lt;count&gt;,         //Number of times to retry calling server endpoints in case of connection issue\n    WaitTime:    &lt;wait_time&gt;,     //How long to wait between each retry\n    MaxWaitTime: &lt;max_wait_time&gt;, //How long to wait in total for operation to finish\n})\n\nservice := encryption.NewEncryption(debugOption, arxOption, credentialOption, retryOption)\ndefer service.Close()\n</code></pre> <p>All Onqlave APIs must be invoked using a <code>Encryption</code> instance.</p>"},{"location":"external-sources/sdk-go/#encrypt","title":"Encrypt","text":"<p>To encrypt data, use the Encrypt(plainText, associatedData []byte) method of the <code>Encryption</code> service. The plainText parameter is the <code>[]byte</code> representation of data you are wishing to encrypt. The associatedData parameter the <code>[]byte</code> representation of associated data which can be used to improve the authenticity of the data (it is not mandatory), as shown below.</p> <p>Encrypt call:</p> <pre><code>\n//Initilise the new encryption service using configurations as per [Usage]\nservice := encryption.NewEncryption(debugOption, arxOption, credentialOption, retryOption)\ndefer service.Close()\n\nplainData := []byte(\"this data needs to be encrypted\")\nassociatedData := []byte(\"this data needs to be authenticated, but not encrypted\") //This can be an arbitrary piece of information you can use to for added security purpose.\ncipherData, err := service.Encrypt(plainData, associatedData)\n</code></pre>"},{"location":"external-sources/sdk-go/#decrypt","title":"Decrypt","text":"<p>To decrypt data, use the Decrypt(cipherData, associatedData []byte) method of the <code>Encryption</code> service. The cipherData parameter is the <code>[]byte</code> representation of data you are wishing to decrypt (previousely encrypted). The associatedData parameter the <code>[]byte</code> representation of associated data which can be used to improve the authenticity of the data (it is not mandatory), as shown below.</p> <pre><code>\n//Initilise the new encryption service using configurations as per [Usage]\nservice := encryption.NewEncryption(debugOption, arxOption, credentialOption, retryOption)\ndefer service.Close()\n\ncipherData := []byte(\"this data is already encrypted using `Encrypt` method\")\nassociatedData := []byte(\"this data needs to be authenticated, but not encrypted\") //This can be an arbitrary piece of information you can use to for added security purpose.\nplainData, err := service.Decrypt(cipherData, associatedData)\n</code></pre>"},{"location":"external-sources/sdk-go/#encrypt-stream","title":"Encrypt Stream","text":"<p>To encrypt stream of data, use the EncryptStream(plainStream io.Reader, cipherStream io.Writer, associatedData []byte) method of the <code>Encryption</code> service. The plainStream parameter is the <code>io.Reader</code> stream of data you are wishing to encrypt. The cipherStream parameter is the <code>io.Write</code> stream you are wishing to write the cipher data to. The associatedData parameter the <code>[]byte</code> representation of associated data which can be used to improve the authenticity of the data (it is not mandatory), as shown below.</p> <pre><code>\n//Initilise the new encryption service using configurations as per [Usage]\nservice := encryption.NewEncryption(debugOption, arxOption, credentialOption, retryOption)\ndefer service.Close()\n\nplainStream, _ := os.OpenFile(\"&lt;file or network stream you are wishing to encrypt&gt;\", os.O_RDONLY, 0666)\nassociatedData := []byte(\"this data needs to be authenticated, but not encrypted\") //This can be an arbitrary piece of information you can use to for added security purpose.\ncipherStream,_ := os.OpenFile(\"&lt;file or network stream you are whishing to stream the encrypted data to&gt;\", os.O_WRONLY, 0666)\nerr := service.EncryptStream(plainStream, cipherStream, associatedData)\n</code></pre>"},{"location":"external-sources/sdk-go/#decrypt-stream","title":"Decrypt Stream","text":"<p>To decrypt data, use the DecryptStream(cipherStream io.Reader, plainStream io.Writer, associatedData []byte) method of the <code>Encryption</code> service. The cipherStream parameter is the <code>io.Reader</code> stream of data you are wishing to decrypt and it was originally encrypted using EncryptStream. The plainStream parameter is the <code>io.Write</code> stream you are wishing to write the plain data back to. The associatedData parameter the <code>[]byte</code> representation of associated data which can be used to improve the authenticity of the data (it is not mandatory), as shown below.</p> <pre><code>\n//Initilise the new encryption service using configurations as per [Usage]\nservice := encryption.NewEncryption(debugOption, arxOption, credentialOption, retryOption)\ndefer service.Close()\n\ncipherStream, _ := os.OpenFile(\"&lt;file or network stream you are wishing to decrypt&gt;\", os.O_RDONLY, 0666)\nassociatedData := []byte(\"this data needs to be authenticated, but not encrypted\") //This can be an arbitrary piece of information you can use to for added security purpose.\nplainStream,_ := os.OpenFile(\"&lt;file or network stream you are whishing to stream the decrypted data to&gt;\", os.O_WRONLY, 0666)\nerr := service.DecryptStreamcipherStream, plainStream, associatedData)\n</code></pre>"},{"location":"external-sources/sdk-go/#reporting-a-vulnerability","title":"Reporting a Vulnerability","text":"<p>If you discover a potential security issue in this project, please reach out to us at security@onqlave.com. Please do not create public GitHub issues or Pull Requests, as malicious actors could potentially view them.</p>"},{"location":"external-sources/sdk-java/","title":"onqlave-java","text":""},{"location":"external-sources/sdk-java/#description","title":"Description","text":"<p>This Java SDK is designed to help developers easily integrate Onqlave <code>Encryption As A Service</code> into their Java backend.</p> <p></p>"},{"location":"external-sources/sdk-java/#table-of-contents","title":"Table of Contents","text":"<ul> <li>Description</li> <li>Table of Contents<ul> <li>Features</li> <li>Installation<ul> <li>Requirements</li> <li>Configuration</li> <li>Usage</li> <li>Encrypt</li> <li>Decrypt</li> <li>Encrypt Stream</li> <li>Decrypt Stream</li> </ul> </li> <li>Reporting a Vulnerability</li> </ul> </li> </ul>"},{"location":"external-sources/sdk-java/#features","title":"Features","text":"<ul> <li>Encrypt/Decrypt piece of information</li> <li>Encrypt/Decrypt stream of data</li> </ul>"},{"location":"external-sources/sdk-java/#installation","title":"Installation","text":""},{"location":"external-sources/sdk-java/#requirements","title":"Requirements","text":"<ul> <li>OpenJDK 17 or higher</li> <li>Maven &gt;= 3.x.x</li> </ul>"},{"location":"external-sources/sdk-java/#configuration","title":"Configuration","text":"<p>Make sure your project is using Maven Modules (it will have a <code>pom.xml</code> file in its root if it already is):</p> <pre><code>mvn install\n</code></pre> <p>Then, reference onqlave-java in a Java program with import:</p> <pre><code>import com.onqlave.encryption.Encryption;\n</code></pre>"},{"location":"external-sources/sdk-java/#usage","title":"Usage","text":"<p>To use this SDK, you firstly need to obtain credential to access an Onqlave Arx by signing up to Onqlave and following instruction to create your 1st Onqlave Arx. Documentation can be found at Onqlave Technical Documentation.</p> <p>The Onqlave Java module is used to perform operations on the configured ARX such as encrypting, and decrypting for an Onqlave_ARX. example:</p> <p>To use this module, the Onqlave client must first be initialized as follows.</p> <pre><code>package com.example;\n\nimport com.onqlave.contract.Configuration;\nimport com.onqlave.contract.Credential;\nimport com.onqlave.contract.RetrySettings;\nimport com.onqlave.encryption.Encryption;\n\npublic class Main {\n    public static void main(String[] agrs) {\n        Credential credential = new Credential(\n                \"&lt;api_access_key&gt;\",           //This is the API Access Key returned of the API Key created during setup. Keep in a safe place.\n                \"&lt;api_signing_key&gt;\",          //This is the API Signing Key retruned of the API Key created during setup. Keep in a safe place.\n                \"&lt;api_secret_key&gt;\");          //This is the API Secret Key retruned of the API Key created during setup. Keep in a safe place.\n        RetrySettings retry = new RetrySettings(\n                \"&lt;count&gt;\",                //Number of times to retry calling server endpoints in case of connection issue\n                \"&lt;wait_time&gt;\",            //How long to wait between each retry\n                \"&lt;max_wait_time&gt;\");        //How long to wait in total for operation to finis\n        // Initial\n        Encryption encryption = new Encryption(credential, retry, \"&lt;arx_url&gt;\", true);\n    }\n}\n</code></pre> <p>All Onqlave APIs must be invoked using a <code>Encryption</code> instance.</p>"},{"location":"external-sources/sdk-java/#encrypt","title":"Encrypt","text":"<p>To encrypt data, use the Encrypt(byte[] planData, byte[] associatedData) method of the Encryption service. The plainText parameter is the <code>byte[]</code> representation of data you are wishing to encrypt. The associatedData parameter the <code>byte[]</code> representation of associated data which can be used to improve the authenticity of the data (it is not mandatory), as shown below.</p> <p>Encryption call:</p> <pre><code>    Encryption serivce = new Encryption(credential, retry, \"&lt;arx_url&gt;\", true);\n    String plainText = \"This is a plain text string\";\n    String associatedData = \"this data needs to be authenticated, but not encrypted\";\n    byte[] cipherData = null;\n    try {\n        cipherData = serivce.Encrypt(plainText.getBytes(), associatedData.getBytes());\n    } catch (Exception e) {\n        //TODO: handle exception here.\n        System.out.println(e.getMessage());\n    }\n</code></pre>"},{"location":"external-sources/sdk-java/#decrypt","title":"Decrypt","text":"<p>To decrypt data, use the Decrypt(byte[] cipherText, byte[] associatedData) method of the <code>Encryption</code> service. The cipherData parameter is the <code>byte[]</code> representation of data you are wishing to decrypt (previously encrypted). The associatedData parameter the <code>byte[]</code> representation of associated data which can be used to improve the authenticity of the data (it is not mandatory), as shown below.</p> <p>Decryption call:</p> <pre><code>    Encryption serivce = new Encryption(credential, retry, \"&lt;arx_url&gt;\", true);\n    String plainText = \"This is cipher data is already encrypted using `Encrypt` method\";\n    String associatedData = \"this data needs to be authenticated, but not encrypted\";\n    byte[] cipherData = null;\n    try {\n        cipherData = serivce.Decrypt(plainText.getBytes(),associatedData.getBytes());\n    } catch (Exception e) {\n        //TODO: handle exception here.\n        System.out.println(e.getMessage());\n    }\n</code></pre>"},{"location":"external-sources/sdk-java/#encrypt-stream","title":"Encrypt Stream","text":"<p>To encrypt stream of data, use the EncryptStream(InputStream plainStream, OutputStream cipherStream, byte[] associatedData) method of the <code>Encryption</code> service. The plainStream parameter is the <code>InputStream</code> stream of data you are wishing to encrypt. The cipherStream parameter is the <code>OutputStream</code> stream you are wishing to write the cipher data to. The associatedData parameter the <code>byte[]</code> representation of associated data which can be used to improve the authenticity of the data (it is not mandatory), as shown below.</p> <pre><code>    Encryption serivce = new Encryption(credential, retry, \"&lt;arx_url&gt;\", true);\n    String plainText = \"This is cipher data is already encrypted using `Encrypt` method\";\n    String associatedData = \"this data needs to be authenticated, but not encrypted\";\n    InputStream encryptPlainStream = new ByteArrayInputStream(plainText.getBytes());\n    ByteArrayOutputStream encryptCipherStream = new ByteArrayOutputStream();\n    try {\n        service.EncryptStream(encryptPlainStream, encryptCipherStream, associatedData.getBytes());\n    } catch (Exception e) {\n        //TODO: handle exception here.\n        System.out.println(e.getMessage());\n    }\n</code></pre>"},{"location":"external-sources/sdk-java/#decrypt-stream","title":"Decrypt Stream","text":"<p>To decrypt stream of data, use the DecryptStream(InputStream cipherStream,OutputStream plainStream, byte[] associatedData) method of the <code>Encryption</code> service. The cipherStream parameter is the <code>InputStream</code> stream of data you are wishing to decrypt and it was originally encrypted using EncryptStream. The plainStream parameter is the <code>OutputStream</code> stream you are wishing to write the plain data back to. The associatedData parameter the <code>byte[]</code> representation of associated data which can be used to improve the authenticity of the data (it is not mandatory), as shown below.</p> <pre><code>    String plainText = \"This is cipher data is already encrypted using `Encrypt` method\";\n    Encryption serivce = new Encryption(credential, retry, \"&lt;arx_url&gt;\", true);\n    ByteArrayInputStream dataEncrypted = new ByteArrayInputStream(encryptCipherStream.toByteArray());\n    ByteArrayOutputStream decryptPlainStream = new ByteArrayOutputStream();\n\n    try {\n        serivce.DecryptStream(dataEncrypted,decryptPlainStream, associatedData.getBytes());\n    } catch (Exception e) {\n        //TODO: handle exception here.\n        System.out.println(e.getMessage());\n    }\n</code></pre>"},{"location":"external-sources/sdk-java/#reporting-a-vulnerability","title":"Reporting a Vulnerability","text":"<p>If you discover a potential security issue in this project, please reach out to us at security@onqlave.com. Please do not create public GitHub issues or Pull Requests, as malicious actors could potentially view them.</p>"},{"location":"external-sources/sdk-node/","title":"Description","text":"<p>This node SDK is designed to help developers easily integrate Onqlave <code>Encryption As A Service</code> into their node backend.</p> <p> </p>"},{"location":"external-sources/sdk-node/#table-of-contents","title":"Table of Contents","text":"<ul> <li>Description</li> <li>Table of Contents<ul> <li>Features</li> <li>Installation<ul> <li>Requirements</li> <li>Configuration</li> <li>Usage</li> <li>Encrypt</li> <li>Decrypt</li> <li>Encrypt Stream</li> <li>Decrypt Stream</li> </ul> </li> <li>Reporting a Vulnerability</li> </ul> </li> </ul>"},{"location":"external-sources/sdk-node/#features","title":"Features","text":"<ul> <li>Encrypt/Decrypt piece of information</li> <li>Encrypt/Decrypt stream of data</li> </ul>"},{"location":"external-sources/sdk-node/#installation","title":"Installation","text":"<pre><code>npm install @onqlavelabs/onqlave-node\n\n</code></pre>"},{"location":"external-sources/sdk-node/#requirements","title":"Requirements","text":"<ul> <li>Node 16.0.0 and above</li> </ul>"},{"location":"external-sources/sdk-node/#configuration","title":"Configuration","text":""},{"location":"external-sources/sdk-node/#usage","title":"Usage","text":"<p>To use this SDK, you firstly need to obtain credential to access an Onqlave Arx by signing up to Onqlave and following instruction to create your 1st Onqlave Arx.</p> <p>The Onqlave Node module is used to perform operations on the configured ARX such as encrypting, and decrypting for an Onqlave_ARX. example:</p> <p>To use this module, the Onqlave client must first be initialized as follows.</p> <pre><code>const { Encryption, withCredential, withRetry, withArx, Credential, RetrySettings } = require('@onqlavelabs/onqlave-node');\nconst { createReadStream, createWriteStream } = require('fs');\n</code></pre> <p>Or using ES modules</p> <pre><code>import { Encryption, withCredential, withRetry, withArx, Credential, RetrySettings }  from '@onqlavelabs/onqlave-node';\nimport { createReadStream, createWriteStream } from 'fs';\n\nconst arxOption = withArx(\"&lt;arx_url&gt;\"); //This is the Arx URL retruned of the API Key created during setup. Keep in in a safe place.\nconst apiKey = \"&lt;api_access_key&gt;\"       //This is the API Access Key returned of the API Key created during setup. Keep in in a safe place.\nconst signingKey = \"&lt;api_signing_key&gt;\"  //This is the API Signing Key retruned of the API Key created during setup. Keep in in a safe place.\nconst secretKey = \"&lt;api_secret_key&gt;\"    //This is the API Secret Key retruned of the API Key created during setup. Keep in in a safe place.\nconst credentialOption = withCredential(new Credential(apiKey, signingKey, secretKey));\nconst retryOption = withRetry(new RetrySettings(2, 400, 2000));\n\nconst service = new Encryption(arxOption, credentialOption, retryOption);\n</code></pre> <p>All Onqlave APIs must be invoked using a <code>Encryption</code> instance.</p>"},{"location":"external-sources/sdk-node/#encrypt","title":"Encrypt","text":"<p>To encrypt data, use the Encrypt(plainData, associatedData) method of the <code>Encryption</code> service. The plainText parameter is the <code>Buffer</code> representation of data you are wishing to encrypt. The associatedData parameter the <code>Buffer</code> representation of associated data which can be used to improve the authenticity of the data (it is not mandatory), as shown below.</p> <pre><code>\n//Initilise the new encryption service using configurations as per [Usage]\nconst service = new Encryption(arxOption, credentialOption, retryOption);\n\nconst plainData = Buffer.from(\"This is the plain data\");\nconst additionalData = Buffer.from(\"This is to authenticated not to encrypt\"); //This can be an arbitrary piece of information you can use to for added security purpose.\nconst cipherData = await service.Encrypt(plainData, associatedData);\n</code></pre>"},{"location":"external-sources/sdk-node/#decrypt","title":"Decrypt","text":"<p>To encrypt data, use the Decrypt(cipherData, associatedData) method of the <code>Encryption</code> service. The cipherData parameter is the <code>Buffer</code> representation of data you are wishing to decrypt (previousely encrypted). The associatedData parameter the <code>Buffer</code> representation of associated data which can be used to improve the authenticity of the data (it is not mandatory), as shown below.</p> <pre><code>\n//Initilise the new encryption service using configurations as per [Usage]\nconst service = new Encryption(arxOption, credentialOption, retryOption);\n\nconst cipherData = Buffer.from(\"this data is already encrypted using `Encrypt` method\")\nconst additionalData = Buffer.from(\"This is to authenticated not to encrypt\"); //This can be an arbitrary piece of information you can use to for added security purpose.\nconst plainData = await service.Decrypt(cipherData, associatedData);\n</code></pre>"},{"location":"external-sources/sdk-node/#encrypt-stream","title":"Encrypt Stream","text":"<p>To encrypt stream of data, use the encryptStream(plainStream, cipherStream, associatedData) method of the <code>Encryption</code> service. The plainStream parameter is the <code>ReadStream</code> stream of data you are wishing to encrypt. The cipherStream parameter is the <code>WriteStream</code> stream you are wishing to write the cipher data to. The associatedData parameter the <code>Buffer</code> representation of associated data which can be used to improve the authenticity of the data (it is not mandatory), as shown below.</p> <pre><code>\n//Initilise the new encryption service using configurations as per [Usage]\nconst service = new Encryption(arxOption, credentialOption, retryOption);\n\nconst plainStream = createReadStream(\"&lt;file or network stream you are wishing to encrypt&gt;\", { highWaterMark: 64 * 1024 });\nconst cipherStream = createWriteStream(\"&lt;file or network stream you are whishing to stream the encrypted data to&gt;\", { encoding: 'binary' });\nconst associatedData = Buffer.from(\"this data needs to be authenticated, but not encrypted\"); //This can be an arbitrary piece of information you can use to for added security purpose.\nawait service.encryptStream(plainStream, cipherStream, additionalData);\nplainStream.close();\ncipherStream.close();\n</code></pre>"},{"location":"external-sources/sdk-node/#decrypt-stream","title":"Decrypt Stream","text":"<p>To encrypt data, use the decryptStream(cipherStream, plainStream, associatedData) method of the <code>Encryption</code> service. The cipherStream parameter is the <code>ReadStream</code> stream of data you are wishing to decrypt and it was originally encrypted using EncryptStream. The plainStream parameter is the <code>WriteStream</code> stream you are wishing to write the plain data back to. The associatedData parameter the <code>Buffer</code> representation of associated data which can be used to improve the authenticity of the data (it is not mandatory), as shown below.</p> <pre><code>\n//Initilise the new encryption service using configurations as per [Usage]\nconst service = new Encryption(arxOption, credentialOption, retryOption);\n\nconst cipherStream = createReadStream(\"&lt;file or network stream you are wishing to decrypt&gt;\", { encoding: 'binary' });\nconst plainStream = createWriteStream(\"&lt;file or network stream you are whishing to stream the decrypted data to&gt;\", { highWaterMark: 64 * 1024 });\nconst associatedData = Buffer.from(\"this data needs to be authenticated, but not encrypted\"); //This can be an arbitrary piece of information you can use to for added security purpose.\nawait service.decryptStream(cipherStream, plainStream, additionalData);\nplainStream.close();\ncipherStream.close();\n</code></pre>"},{"location":"external-sources/sdk-node/#reporting-a-vulnerability","title":"Reporting a Vulnerability","text":"<p>If you discover a potential security issue in this project, please reach out to us at security@onqlave.com. Please do not create public GitHub issues or Pull Requests, as malicious actors could potentially view them.</p>"},{"location":"external-sources/sdk-python/","title":"Sdk python","text":"<p>This Python SDK is designed to help developers easily integrate Onqlave <code>Encryption As A Service</code> into their python backend.</p> <p> </p>"},{"location":"external-sources/sdk-python/#table-of-contents","title":"Table of Contents","text":"<ul> <li>Description</li> <li>Table of Contents<ul> <li>Features</li> <li>Installation<ul> <li>Requirements</li> <li>Configuration</li> <li>Usage</li> <li>Encrypt</li> <li>Decrypt</li> <li>Encrypt Stream</li> <li>Decrypt Stream</li> </ul> </li> <li>Reporting a Vulnerability</li> </ul> </li> </ul>"},{"location":"external-sources/sdk-python/#features","title":"Features","text":"<ul> <li>Encrypt/decrypt pieces of information</li> <li>Encrypt/decrypt stream of data</li> </ul>"},{"location":"external-sources/sdk-python/#installation","title":"Installation","text":""},{"location":"external-sources/sdk-python/#requirements","title":"Requirements","text":"<ul> <li>Python 3.8 and above</li> </ul>"},{"location":"external-sources/sdk-python/#configuration","title":"Configuration","text":"<p>To install, simply using this command:</p> <pre><code>pip install onqlave-python\n</code></pre> <p>You can also check the package detail on PyPI</p>"},{"location":"external-sources/sdk-python/#usage","title":"Usage","text":"<p>To use this SDK, you firstly need to obtain credentials to access an Onqlave Arx by signing up to Onqlave and following instruction to create your first Onqlave Arx. Documentation can be found at Onqlave Technical Documentation.</p> <p>The Onqlave Python module is used to perform operations on the configured Arx such as encrypting and decryptin for an Onqlave Arx. </p> <p>To use this module, an Onqlave client should be initialized as follows. (Please note that there are 3 ways of loading configurations specified in the examples/ directory.)</p> <pre><code>from onqlave.encryption import options\nfrom onqlave.encryption.encryption import Encryption\nfrom onqlave.credentials.credentials import Credential\nfrom onqlave.connection.client import RetrySettings\n\ncred_file_path = \"credentials.json\"\n\narx_option = options.ArxOption()\ncredential_option = Credential()\n\narx_option.load_arx_url_from_json(cred_file_path)\ncredential_option.load_config_from_json(cred_file_path)\n\nretry_option = RetrySettings(count=1,wait_time=1,max_wait_time=2) \n\nencryption_engine = Encryption(\n    debug_option=debug_option,\n    arx_option=arx_option,\n    credential_option=credential_option,\n    retry_setting=retry_option\n)\n</code></pre>"},{"location":"external-sources/sdk-python/#encrypt","title":"Encrypt","text":"<p>To encrypt data, use the encrypt(plaintext: bytearray, associated_data: bytearray) method of the <code>Encryption</code> service. The plaintext parameter is the <code>bytearray</code> representation of data you are wishing to encrypt. The associated_data parameter the <code>bytearray</code> representation of associated data which can be used to improve the authenticity of the data (it is not mandatory), as shown below.</p> <pre><code>plaintext = \"hello world\" # your data goes here\nassociated_data = \"auth\" # your authentication data goes here\ncipher_text = encryption_engine.encrypt(plaintext.encode(), associated_data.encode())\n</code></pre>"},{"location":"external-sources/sdk-python/#decrypt","title":"Decrypt","text":"<p>To decrypt data, use the decrypt(cipher_data: bytearray, associated_data: bytearray) method of the <code>Encryption</code> service. The cipher_data parameter is the <code>bytearray</code> representation of data you are wishing to decrypt (previousely encrypted). The associated_data parameter the <code>bytearray</code> representation of associated data which can be used to improve the authenticity of the data (it is not mandatory), as shown below.</p> <pre><code>decrypted_ciphertext = encryption_engine.decrypt(cipher_text,associated_data.encode())\n</code></pre>"},{"location":"external-sources/sdk-python/#encrypt-stream","title":"Encrypt Stream","text":"<p>To encrypt stream of data, use the encrypt_stream(plain_stream io.Reader, cipher_stream io.Writer, associated_data bytearray) method of the <code>Encryption</code> service. The plain_stream parameter is the <code>io.Reader</code> stream of data you are wishing to encrypt. The cipher_stream parameter is the <code>io.Write</code> stream you are wishing to write the cipher data to. The associated_data parameter the <code>bytearray</code> representation of associated data which can be used to improve the authenticity of the data (it is not mandatory), as shown below.</p> <pre><code>plain_file_stream = open(\"path to your plaintext file\",\"rb\")\nplain_stream = io.BytesIO(plain_file_stream.read())\ncipher_stream = io.BytesIO()\n\nencryption_engine.encrypt_stream(plain_stream,cipher_stream,associated_data.encode())\ncipher_stream.seek(0)\n</code></pre>"},{"location":"external-sources/sdk-python/#decrypt-stream","title":"Decrypt Stream","text":"<p>To decrypt data, use the decrypt_stream(cipher_stream io.io.BytesIO, plain_stream io.BytesIO, associated_data []byte) method of the <code>Encryption</code> service. The cipher_stream parameter is the <code>io.BytesIO()</code> stream of data you are wishing to decrypt and it was originally encrypted using encrypt_stream. The plain_stream parameter is the <code>io.BytesIO()</code> stream you are wishing to write the plain data back to. The associated_data parameter the <code>bytearray</code> representation of associated data which can be used to improve the authenticity of the data (it is not mandatory), as shown below.</p> <pre><code>decrypted_stream = io.BytesIO()\nencryption_engine.decrypt_stream(\n    cipher_stream=cipher_stream,\n    plain_stream=decrypted_stream,\n    associated_data=associated_data.encode()\n)\ndecrypted_stream.seek(0)\n\nwith open(\n    \"path to your decrypted file\",\n    \"wb\"\n) as result:\n    result.write(decrypted_stream.read())\n</code></pre>"},{"location":"external-sources/sdk-python/#reporting-a-vulnerability","title":"Reporting a Vulnerability","text":"<p>If you discover a potential security issue in this project, please reach out to us at security@onqlave.com. Please do not create public GitHub issues or Pull Requests, as malicious actors could potentially view them.</p>"},{"location":"getting-started/quick-start/","title":"Quick start","text":""},{"location":"getting-started/quick-start/#get-started-building-with-onqlave-in-minutes","title":"Get started building with Onqlave in minutes","text":"<p>In this short guide, you'll learn key concepts and experience the Onqlave workflow. It should only take about 5 minutes to complete and by the end you'll have an up and running Encryption infrastructure in Onqlave's free development Cloud (Onqlave Community Cloud).</p> <p>To make it easy to follow along, we've laid out a trail of emojis to guide your way. Whenever you see a \ud83e\udd50 it means there's something for you to do.</p> <p>Let's get started!</p>"},{"location":"getting-started/quick-start/#1-install-the-onqlave-cli","title":"1. Install the Onqlave CLI","text":"<p>To develop with Onqlave, you need the Onqlave CLI (can be done through Dashboard as well). It provisions your test environment, and set up what you need to use Onqlave for development.</p> <p>\ud83e\udd50 Install by running the appropriate command for your system:</p>"},{"location":"getting-started/quick-start/#linux","title":"Linux","text":"<ul> <li>Download Linux executable file <code>onqlave-linux</code> from the release assets</li> <li>Grant executable permission to <code>onqlave-linux</code> file</li> </ul> <pre><code>sudo chmod +x onqlave-linux\n</code></pre> <ul> <li>Make sure <code>onqlave-linux</code> is executable:</li> </ul> <pre><code>./onqlave-linux\n</code></pre>"},{"location":"getting-started/quick-start/#macos","title":"MacOS","text":"<ul> <li>Download Linux executable file <code>onqlave-darwin</code> from the release assets</li> <li>Grant executable permission to <code>onqlave-darwin</code> file</li> </ul> <pre><code>sudo chmod +x onqlave-darwin\n</code></pre> <ul> <li>Make sure <code>onqlave-darwin</code> is executable:</li> </ul> <pre><code>./onqlave-darwin\n</code></pre>"},{"location":"getting-started/quick-start/#windows","title":"Windows","text":"<ul> <li>Download Windows executable file <code>onqlave-windows.exe</code> from the release assets</li> <li>Make sure <code>onqlave-windows.exe</code> is executable:</li> </ul> <pre><code>.\\onqlave-windows.exe\n</code></pre>"},{"location":"getting-started/quick-start/#docker","title":"Docker","text":"<p>Use this command to get our latest docker image:</p> <pre><code>docker pull ghcr.io/onqlavelabs/onqlavelabs/onqlave.cli:latest\n</code></pre> <p>Listing all the existed docker images of Onqlave:</p> <pre><code>docker image ls | grep ghcr.io/onqlavelabs/onqlavelabs/onqlave.cli\n</code></pre> <p>From here you can observe the latest image_id and can copy it to include in the next command to run the image or you can simply run this command to start the container:</p> <pre><code>docker run -it ghcr.io/onqlavelabs/onqlavelabs/onqlave.cli bash\n</code></pre> <p>After entering the container via BASH shell, you can try to type this command to make sure everything works:</p> <pre><code>onqlave\n</code></pre>"},{"location":"getting-started/quick-start/#installation-script","title":"Installation Script","text":"<ul> <li>An installation shell script is provided to download any specific Onqlave CLI version</li> <li>Download and execute the installation script:</li> </ul> <pre><code>curl -s \"https://raw.githubusercontent.com/onqlavelabs/onqlave.cli/main/scripts/install.sh\" | bash -s ${cli-version}\n</code></pre> <ul> <li>For Windows users, it is recommended to have bash executable installed such as <code>git bash</code> before using the   installation script; or you can download the CLI executable directly from the release.</li> </ul>"},{"location":"getting-started/quick-start/#2-init-the-onqlave-cli-environment","title":"2. Init the Onqlave CLI environment","text":"<p>To be able to use Onqlave CLI, you would need to first initialise the CLI. </p> <p>\ud83e\udd50 Initialise by running the following command:</p> <pre><code>onqlave config init\n</code></pre>"},{"location":"getting-started/quick-start/#3-signup-to-onqlave-platform","title":"3. Signup to Onqlave Platform","text":"<p>Now you have your CLI configured, you will need to setup your Onqlave account.</p> <p>\ud83e\udd50 Signup by running the following command:</p> <pre><code>onqlave auth signup your_email@domain.com --full_name=\"You Full Name\" --tenant_name=\"Your tenant name\"\n</code></pre> <p>\ud83e\udd50 Login by running the following command:</p> <pre><code>onqlave auth login your_email@domain.com --tenant_name=\"Your tenant name\"\n</code></pre>"},{"location":"getting-started/quick-start/#4-create-your-first-api-key","title":"4. Create your first API key","text":"<p>Now you have your Onqlave account, you can create your first API key which can be used to integrate your application with Onqlave Encryption Engine using our SDKs.</p> <p>Note: API key should be treated a secret. So make sure you keep it secure, maybe storing it in your secret manager, or environment variable - don't hardcode it :)</p> <p>\ud83e\udd50 Create API Key by running the following command:</p> <pre><code>onqlave key add -a your_application_id -c your_arx_id -t your_application_technology\n</code></pre>"},{"location":"getting-started/quick-start/#5-find-onqlave-sdk-for-your-language-of-choice","title":"5. Find Onqlave SDK for your language of choice","text":"<p>Now that you have your first API Key, you can use our SDKs to integrate with your application. After that you would be able to easily encrypt/decrypt any piece of data.</p> <p>\ud83e\udd50 Choose and download your preferred SDK:</p> <ol> <li> <p>Go SDK</p> </li> <li> <p>NodeJS SDK</p> </li> <li> <p>Java SDK</p> </li> <li> <p>Python SDK</p> </li> </ol>"},{"location":"getting-started/quick-start/#6-encryptdecrypt-your-sensitive-information","title":"6. Encrypt/Decrypt your sensitive information","text":"<p>You are now ready to encrypt/decrypt data in your application using Onqlave Encryption engine.</p> <p>\ud83e\udd50 Encrypt/Decrypt with these example codes:</p>"},{"location":"getting-started/quick-start/#init-the-encryption","title":"Init the encryption","text":"<p>1. Go</p> <pre><code>import (\n    \"github.com/onqlavelabs/onqlave-go/onqlave/onqlaveconnection\"\n    \"github.com/onqlavelabs/onqlave-go/onqlave/onqlavecredentials\"\n    \"github.com/onqlavelabs/onqlave-go/onqlave/onqlaveencryption\"\n)\n\ndebugOption := onqlaveencryption.WithDebug(true) //This option lets you choose whether to start SDK operation in debug mode to info mode\narxOption := onqlaveencryption.WithArx(\"&lt;arx_url&gt;\") //This is the Arx URL returned of the API Key created during setup. Keep in in a safe place.\ncredentialOption := onqlaveencryption.WithCredential(onqlavecredentials.Credential{\n    AccessKey:  \"&lt;api_access_key&gt;\",   //This is the API Access Key returned of the API Key created during setup. Keep in in a safe place.\n    SigningKey: \"&lt;api_signing_key&gt;\",  //This is the API Signing Key returned of the API Key created during setup. Keep in in a safe place.\n    SecretKey:  \"&lt;api_secret_key&gt;\",   //This is the API Secret Key returned of the API Key created during setup. Keep in in a safe place.\n})\nretryOption := onqlaveencryption.WithRetry(onqlaveconnection.RetrySettings{\n    Count:       &lt;count&gt;,         //Number of times to retry calling server endpoints in case of connection issue\n    WaitTime:    &lt;wait_time&gt;,     //How long to wait between each retry\n    MaxWaitTime: &lt;max_wait_time&gt;, //How long to wait in total for operation to finish\n})\n\nservice := encryption.NewEncryption(debugOption, arxOption, credentialOption, retryOption)\ndefer service.Close()\n</code></pre> <p>2. NodeJS</p> <pre><code>import { Encryption, withCredential, withRetry, withArx, Credential, RetrySettings }  from '@onqlavelabs/onqlave-node';\nimport { createReadStream, createWriteStream } from 'fs';\n\nconst arxOption = withArx(\"&lt;arx_url&gt;\"); //This is the Arx URL returned of the API Key created during setup. Keep in in a safe place.\nconst apiKey = \"&lt;api_access_key&gt;\"       //This is the API Access Key returned of the API Key created during setup. Keep in in a safe place.\nconst signingKey = \"&lt;api_signing_key&gt;\"  //This is the API Signing Key returned of the API Key created during setup. Keep in in a safe place.\nconst secretKey = \"&lt;api_secret_key&gt;\"    //This is the API Secret Key returned of the API Key created during setup. Keep in in a safe place.\nconst credentialOption = withCredential(new Credential(apiKey, signingKey, secretKey));\nconst retryOption = withRetry(new RetrySettings(2, 400, 2000));\n\nconst service = new Encryption(arxOption, credentialOption, retryOption);\n</code></pre> <p>3. Java</p> <pre><code>package com.example;\n\nimport com.onqlave.contract.Configuration;\nimport com.onqlave.contract.Credential;\nimport com.onqlave.contract.RetrySettings;\nimport com.onqlave.encryption.Encryption;\n\npublic class Main {\n    public static void main(String[] agrs) {\n        Credential credential = new Credential(\n                \"&lt;api_access_key&gt;\",           //This is the API Access Key returned of the API Key created during setup. Keep in a safe place.\n                \"&lt;api_signing_key&gt;\",          //This is the API Signing Key retruned of the API Key created during setup. Keep in a safe place.\n                \"&lt;api_secret_key&gt;\");          //This is the API Secret Key retruned of the API Key created during setup. Keep in a safe place.\n        RetrySettings retry = new RetrySettings(\n                \"&lt;count&gt;\",                //Number of times to retry calling server endpoints in case of connection issue\n                \"&lt;wait_time&gt;\",            //How long to wait between each retry\n                \"&lt;max_wait_time&gt;\");        //How long to wait in total for operation to finis\n        // Initial\n        Encryption encryption = new Encryption(credential, retry, \"&lt;arx_url&gt;\", true);\n    }\n</code></pre> <p>4. Python</p> <pre><code>from onqlave.encryption import options\nfrom onqlave.encryption.encryption import Encryption\nfrom onqlave.credentials.credentials import Credential\nfrom onqlave.connection.client import RetrySettings\n\ncred_file_path = \"credentials.json\"\n\narx_option = options.ArxOption()\ncredential_option = Credential()\n\narx_option.load_arx_url_from_json(cred_file_path)\ncredential_option.load_config_from_json(cred_file_path)\n\nretry_option = RetrySettings(count=1,wait_time=1,max_wait_time=2) \n\nencryption_engine = Encryption(\n    debug_option=debug_option,\n    arx_option=arx_option,\n    credential_option=credential_option,\n    retry_setting=retry_option\n)\n</code></pre>"},{"location":"getting-started/quick-start/#encryptdecrypt-data","title":"Encrypt/Decrypt data","text":"<p>1. Go</p> <pre><code>//Initialise the new encryption service using configurations as per [Usage]\nservice := encryption.NewEncryption(debugOption, arxOption, credentialOption, retryOption)\ndefer service.Close()\n\nplainData := []byte(\"this data needs to be encrypted\")\nassociatedData := []byte(\"this data needs to be authenticated, but not encrypted\") //This can be an arbitrary piece of information you can use to for added security purpose.\ncipherData, err := service.Encrypt(plainData, associatedData)\nplainData, err := service.Decrypt(cipherData, associatedData)\n</code></pre> <p>2. NodeJS</p> <pre><code>//Initialise the new encryption service using configurations as per [Usage]\nconst service = new Encryption(arxOption, credentialOption, retryOption);\n\nconst plainData = Buffer.from(\"This is the plain data\");\nconst additionalData = Buffer.from(\"This is to authenticated not to encrypt\"); //This can be an arbitrary piece of information you can use to for added security purpose.\nconst cipherData = await service.Encrypt(plainData, associatedData);\nconst plainData = await service.Decrypt(cipherData, associatedData);\n</code></pre> <p>3. Java</p> <pre><code>    Encryption serivce = new Encryption(credential, retry, \"&lt;arx_url&gt;\", true);\n    String plainText = \"This is a plain text string\";\n    String associatedData = \"this data needs to be authenticated, but not encrypted\";\n    byte[] cipherData = null;\n    try {\n        cipherData = serivce.Encrypt(plainText.getBytes(), associatedData.getBytes());\n    } catch (Exception e) {\n        //TODO: handle exception here.\n        System.out.println(e.getMessage());\n    }\n    try {\n        cipherData = serivce.Decrypt(plainText.getBytes(),associatedData.getBytes());\n    } catch (Exception e) {\n        //TODO: handle exception here.\n        System.out.println(e.getMessage());\n    }\n</code></pre> <p>4. Python</p> <pre><code>plaintext = \"hello world\" # your data goes here\nassociated_data = \"auth\" # your authentication data goes here\ncipher_text = encryption_engine.encrypt(plaintext.encode(), associated_data.encode())\ndecrypted_ciphertext = encryption_engine.decrypt(cipher_text,associated_data.encode())\n</code></pre>"},{"location":"getting-started/quick-start/#encryptdecrypt-stream","title":"Encrypt/Decrypt stream","text":"<p>1. Go</p> <pre><code>//Initialise the new encryption service using configurations as per [Usage]\nservice := encryption.NewEncryption(debugOption, arxOption, credentialOption, retryOption)\ndefer service.Close()\n\nplainStream, _ := os.OpenFile(\"&lt;file or network stream you are wishing to encrypt&gt;\", os.O_RDONLY, 0666)\nassociatedData := []byte(\"this data needs to be authenticated, but not encrypted\") //This can be an arbitrary piece of information you can use to for added security purpose.\ncipherStream,_ := os.OpenFile(\"&lt;file or network stream you are whishing to stream the encrypted data to&gt;\", os.O_WRONLY, 0666)\nerr := service.EncryptStream(plainStream, cipherStream, associatedData)\n\nplainStream,_ := os.OpenFile(\"&lt;file or network stream you are whishing to stream the decrypted data to&gt;\", os.O_WRONLY, 0666)\nerr := service.DecryptStreamcipherStream, plainStream, associatedData)\n</code></pre> <p>2. NodeJS</p> <pre><code>\n//Initialise the new encryption service using configurations as per [Usage]\nconst service = new Encryption(arxOption, credentialOption, retryOption);\n\nconst plainStream = createReadStream(\"&lt;file or network stream you are wishing to encrypt&gt;\", { highWaterMark: 64 * 1024 });\nconst cipherStream = createWriteStream(\"&lt;file or network stream you are whishing to stream the encrypted data to&gt;\", { encoding: 'binary' });\nconst associatedData = Buffer.from(\"this data needs to be authenticated, but not encrypted\"); //This can be an arbitrary piece of information you can use to for added security purpose.\nawait service.encryptStream(plainStream, cipherStream, additionalData);\n\nconst plainStream = createWriteStream(\"&lt;file or network stream you are whishing to stream the decrypted data to&gt;\", { highWaterMark: 64 * 1024 });\nconst associatedData = Buffer.from(\"this data needs to be authenticated, but not encrypted\"); //This can be an arbitrary piece of information you can use to for added security purpose.\nawait service.decryptStream(cipherStream, plainStream, additionalData);\nplainStream.close();\ncipherStream.close();\n</code></pre> <p>3. Java</p> <pre><code>    Encryption serivce = new Encryption(credential, retry, \"&lt;arx_url&gt;\", true);\n    String plainText = \"This is cipher data is already encrypted using `Encrypt` method\";\n    String associatedData = \"this data needs to be authenticated, but not encrypted\";\n    InputStream encryptPlainStream = new ByteArrayInputStream(plainText.getBytes());\n    ByteArrayOutputStream encryptCipherStream = new ByteArrayOutputStream();\n    try {\n        service.EncryptStream(encryptPlainStream, encryptCipherStream, associatedData.getBytes());\n    } catch (Exception e) {\n        //TODO: handle exception here.\n        System.out.println(e.getMessage());\n    }\n\n    ByteArrayInputStream dataEncrypted = new ByteArrayInputStream(encryptCipherStream.toByteArray());\n    ByteArrayOutputStream decryptPlainStream = new ByteArrayOutputStream();\n    try {\n        serivce.DecryptStream(dataEncrypted,decryptPlainStream, associatedData.getBytes());\n    } catch (Exception e) {\n        //TODO: handle exception here.\n        System.out.println(e.getMessage());\n    }\n</code></pre> <p>4. Python</p> <pre><code>plain_file_stream = open(\"path to your plaintext file\",\"rb\")\nplain_stream = io.BytesIO(plain_file_stream.read())\ncipher_stream = io.BytesIO()\n\nencryption_engine.encrypt_stream(plain_stream,cipher_stream,associated_data.encode())\ncipher_stream.seek(0)\n\ndecrypted_stream = io.BytesIO()\nencryption_engine.decrypt_stream(\n    cipher_stream=cipher_stream,\n    plain_stream=decrypted_stream,\n    associated_data=associated_data.encode()\n)\ndecrypted_stream.seek(0)\n\nwith open(\n    \"path to your decrypted file\",\n    \"wb\"\n) as result:\n    result.write(decrypted_stream.read())\n\n</code></pre>"},{"location":"getting-started/quick-start/#whats-next","title":"What's next?","text":"<p>\ud83e\udd50 Check out the detail documentation to learn how our services work.</p>"},{"location":"guides/cli-guide/authentication/","title":"Authentication","text":"<p>Before starting the authentication process via CLI, please make sure that you have a valid account and valid tenant name.</p>"},{"location":"guides/cli-guide/authentication/#authenticating","title":"Authenticating","text":"<p>The authentication process will go through 4 steps:</p>"},{"location":"guides/cli-guide/authentication/#1-input-authentication-information-via-cli","title":"1. Input authentication information via CLI:","text":"<p>Use this command to begin the authn process:</p> <pre><code>onqlave auth login your_email_account@domain.com -t your-verified-tenant-name\n</code></pre> <p>After entering the above command, the output should appear as follows:</p> <pre><code>Login instruction is sent to email address 'your_email_count@domain.com'.\nPlease be mindful that the link provided in email is only valid for 30 minutes.\n</code></pre>"},{"location":"guides/cli-guide/authentication/#2-wait-for-an-email-from-onqlave","title":"2. Wait for an email from Onqlave","text":"<p>You should shortly receive an email at the address you provided (in the previous step).</p> <p>Please note that the link contained within the email is only valid for 30 minutes.</p>"},{"location":"guides/cli-guide/authentication/#3-confirm-your-email","title":"3. Confirm your email","text":"<p>Open your email and click on the provided link to complete the email confirmation prompt </p>"},{"location":"guides/cli-guide/authentication/#4-return-to-the-cli-and-work-with-an-authenticated-session","title":"4. Return to the CLI and work with an authenticated session","text":"<p>After confirming your email, the CLI output should look like this:</p> <pre><code>\ud83c\udf89 Done!  You successfully login to Onqlave platform.\n\nFor more information, read our documentation at https://docs.onqlave.com\n\n</code></pre> <p>From here you can explore the interaction options provided by onqlave-cli using one of the following commands:</p> <pre><code>onqlave\n</code></pre> <p>or</p> <pre><code>onqlave help\n</code></pre> <p>or</p> <pre><code>onqlave --help\n</code></pre> <p>Each will produce instructions for the supported commands of onqlave-cli:</p> <pre><code>Usage:\n  onqlave [command]\n\nExamples:\nonqlave\n\nAvailable Commands:\n  application application management\n  arx         arx management\n  auth        authentication\n  completion  Generate the autocompletion script for the specified shell\n  config      config environment variables\n  help        Help about any command\n  key         api key management\n  tenant      tenant management\n  user        user management\n\nFlags:\n  -h, --help      help for onqlave\n      --json      JSON Output. Set to true if stdout is not a TTY.\n  -v, --version   version for onqlave\n\nUse \"onqlave [command] --help\" for more information about a command\n\n\n</code></pre>"},{"location":"guides/cli-guide/overview-cli/","title":"Overview - CLI","text":"<p>Currently, there is only one way to use the CLI. This is via the provided docker container.</p>"},{"location":"guides/cli-guide/overview-cli/#before-you-start","title":"Before you start","text":"<p>Make sure that you have an executable docker on your machine.</p> <p>In addition, you can try to get comfortable with docker before proceeding by reviewing the docker documentation</p>"},{"location":"guides/cli-guide/overview-cli/#check-the-quick-start-video-guide","title":"Check the quick start video guide","text":""},{"location":"guides/cli-guide/overview-cli/#fetch-and-run-the-onqlave-cli","title":"Fetch and run the Onqlave CLI","text":"<p>You can run Onqlave CLI across various platforms.</p>"},{"location":"guides/cli-guide/overview-cli/#linux","title":"Linux","text":"<ul> <li>Download Linux executable file <code>onqlave-linux</code> from the release assets</li> <li>Grant executable permission to <code>onqlave-linux</code> file</li> </ul> <pre><code>sudo chmod +x onqlave-linux\n</code></pre> <ul> <li>Make sure <code>onqlave-linux</code> is executable:</li> </ul> <pre><code>./onqlave-linux\n</code></pre>"},{"location":"guides/cli-guide/overview-cli/#macos","title":"MacOS","text":"<ul> <li>Download Linux executable file <code>onqlave-darwin</code> from the release assets</li> <li>Grant executable permission to <code>onqlave-darwin</code> file</li> </ul> <pre><code>sudo chmod +x onqlave-darwin\n</code></pre> <ul> <li>Make sure <code>onqlave-darwin</code> is executable:</li> </ul> <pre><code>./onqlave-darwin\n</code></pre>"},{"location":"guides/cli-guide/overview-cli/#windows","title":"Windows","text":"<ul> <li>Download Windows executable file <code>onqlave-windows.exe</code> from the release assets</li> <li>Make sure <code>onqlave-windows.exe</code> is executable:</li> </ul> <pre><code>.\\onqlave-windows.exe\n</code></pre>"},{"location":"guides/cli-guide/overview-cli/#docker","title":"Docker","text":"<p>Use this command to get our latest docker image:</p> <pre><code>docker pull ghcr.io/onqlavelabs/onqlavelabs/onqlave.cli:latest\n</code></pre> <p>Listing all the existed docker images of Onqlave:</p> <pre><code>docker image ls | grep ghcr.io/onqlavelabs/onqlavelabs/onqlave.cli\n</code></pre> <p>From here you can observe the latest image_id and can copy it to include in the next command to run the image or you can simply run this command to start the container:</p> <pre><code>docker run -it ghcr.io/onqlavelabs/onqlavelabs/onqlave.cli bash\n</code></pre> <p>After entering the container via BASH shell, you can try to type this command to make sure everything works:</p> <pre><code>onqlave\n</code></pre> <p>The output should look like this:</p> <pre><code>Usage:\n onqlave [command]\n\nExamples:\nonqlave\n\nAvailable Commands:\n application application management\n arx         arx management\n auth        authentication\n completion  Generate the auto completion script for the specified shell\n config      config environment variables\n help        Help about any command\n key         api key management\n tenant      tenant management\n user        user management\n\nFlags:\n -h, --help      help for onqlave\n     --json      JSON Output. Set to true if stdout is not a TTY.\n -v, --version   version for onqlave\n\nUse \"onqlave [command] --help\" for more information about a command.\n\n\n</code></pre>"},{"location":"guides/cli-guide/overview-cli/#installation-script","title":"Installation Script","text":"<ul> <li>An installation shell script is provided to download any specific Onqlave CLI version</li> <li>Download and execute the installation script:</li> </ul> <pre><code>curl -s \"https://raw.githubusercontent.com/onqlavelabs/onqlave.cli/main/scripts/install.sh\" | bash -s ${cli-version}\n</code></pre> <ul> <li>For Windows users, it is recommended to have bash executable installed such as <code>git bash</code> before using the   installation script; or you can download the CLI executable directly from the release.</li> </ul>"},{"location":"guides/cli-guide/overview-cli/#init-the-configuration","title":"Init the configuration","text":"<pre><code>onqlave config init\n</code></pre> <p>If the configuration initialization is a success, you will see the following in the terminal</p> <pre><code>\ud83c\udf89 Done!  You successfully initialize your environment . Next step is to signup/login.\nFor more information, read our documentation at https://docs.onqlave.com\n</code></pre>"},{"location":"guides/cli-guide/overview-cli/#signuplogin","title":"Signup/login","text":"<p>After init the configuration, you can use this command to signup:</p> <pre><code>onqlave auth signup your_email@domain.com --full_name=\"You Full Name\" --tenant_name=\"Your tenant name\"\n</code></pre> <p>Then you will receive and email from our communications service at comms@onqlave.com with an activation link to complete the signup process. Just follow the link and confirm your registered email with us. Then you will be ready to proceed to the login step:</p> <pre><code>onqlave auth login your_email@domain.com --tenant_name=\"Your tenant name\"\n</code></pre> <p>You will also receive another email from comms@onqlave.com with a login link. After you complete the login verification process. You will be able to interact with the Onqlave platform via CLI.</p>"},{"location":"guides/cli-guide/overview-cli/#explore-the-help-for-each-command","title":"Explore the help for each command","text":"<p>In the CLI, you can try this formula to get specific help about each of the available commands:</p> <pre><code>onqlave help {arx}\n</code></pre> <p>You may replace {arx} with other commands listed below to get the help.</p> <pre><code>Available Commands:\n application application management\n arx         arx management\n auth        authentication\n completion  Generate the auto completion script for the specified shell\n config      config environment variables\n help        Help about any command\n key         api key management\n tenant      tenant management\n user        user management\n\nFlags:\n -h, --help      help for onqlave\n     --json      JSON Output. Set to true if stdout is not a TTY.\n -v, --version   version for onqlave\n\nUse \"onqlave [command] --help\" for more information about a command.\n</code></pre>"},{"location":"guides/cli-guide/overview-cli/#looking-for-another-form-of-interaction","title":"Looking for another form of interaction?","text":"<p>If this is not your preferred way to interact with Onqlave, consider using the the Graphical Web Interface</p>"},{"location":"guides/cli-guide/administration/apikey/","title":"API Key","text":""},{"location":"guides/cli-guide/administration/apikey/#before-you-start","title":"Before you start","text":"<p>The CLI commands to manage API Keys allow you to bring your Arx and applications together. The API Keys created here will draw on all of the unique inputs you have created for the Arx and application that you chose.</p> <p>When you create your key it is critical that you store it as it will only be displayed once. To preserve the integrity of the key, Onqlave does not keep a record of this. Do not close the final window  until you have made this record!</p> <p>You may need to look at the supported available commands for api keys and base configuration information for API Keys before working with API Keys via CLI.</p>"},{"location":"guides/cli-guide/administration/apikey/#create-an-api-key","title":"Create an API key","text":"<p>Who can perform this operation?</p> <ul> <li>Platform Owner</li> <li>Developer</li> </ul> <p>To create your api key, your have to specify your application_id, application_technology and arx_id</p> <pre><code>onqlave key add -a your_application_id -c your_arx_id -t your_application_technology\n</code></pre> <p>The output log will include the ID of the newly created APIKey</p> <pre><code>\ud83c\udf89 Done! API Key created successfully.\nAPI Key ID: apikey--your_api_key\nFor more information, read our documentation at https://docs.onqlave.com\n</code></pre>"},{"location":"guides/cli-guide/administration/apikey/#describe-an-api-key","title":"Describe an API key","text":"<p>Who can perform this operation?</p> <ul> <li>Platform Owner</li> <li>Developer</li> </ul> <pre><code>onqlave key describe your_app_key_id\n</code></pre> <p>Output will be formatted in tabular format</p> <p></p>"},{"location":"guides/cli-guide/administration/apikey/#list-all-api-keys","title":"List all API keys","text":"<p>Who can perform this operation?</p> <ul> <li>Platform Owner</li> <li>Developer</li> </ul> <pre><code>onqlave key list\n</code></pre> <p>By default, the result will be formatted in a table.   </p> <p></p>"},{"location":"guides/cli-guide/administration/apikey/#delete-an-api-key","title":"Delete an API key","text":"<p>Who can perform this operation?</p> <ul> <li>Platform Owner</li> <li>Developer</li> </ul> <pre><code>onqlave key delete your_app_key_id\n</code></pre>"},{"location":"guides/cli-guide/administration/apikey/#get-base-configuration-information-for-api-keys","title":"Get base configuration information for API Keys","text":"<p>Before interacting with the API key, you may need to retrieve all the base information about your Arx and application. The most frequently used information when interacting with API key via CLI are IDs of Arx, application and owner</p> <pre><code>onqlave key base\n</code></pre> <p>The output should be similar to to the following:   </p> <p></p>"},{"location":"guides/cli-guide/administration/apikey/#explore-available-commands","title":"Explore available commands","text":"<pre><code>onqlave key\n</code></pre> <pre><code>This command is used to manage api key resources.\n\nUsage:\n onqlave key [command]\n\nExamples:\nonqlave key\n\nAvailable Commands:\n add         add api key by attributes\n base        get base\n delete      delete api key by ID\n describe    describe api key by ID\n list        list api key\n\nFlags:\n -h, --help   help for key\n\nGlobal Flags:\n     --json   Output logs as JSON.  Set to true if stdout is not a TTY.\n\nUse \"onqlave key [command] --help\" for more information about a command.\n</code></pre>"},{"location":"guides/cli-guide/administration/application/","title":"Application","text":""},{"location":"guides/cli-guide/administration/application/#before-you-start","title":"Before you start","text":"<p>The CLI commands for your Application will allow you to create and allocate the unique identifiers for your front and backend applications to be used when creating API Keys. This separated Application workflow ensures you have easy access to enabling, disabling and archiving applications as needed.</p> <p>When the application reference is created, an API token and encryption key is established. Note that Onqlave does not allow you to permanently delete any applications, however they can be archived, which will then disable the respective API token and encryption key.</p> <p>You may need to look at the supported available commands for an application.</p>"},{"location":"guides/cli-guide/administration/application/#create-an-application","title":"Create an application","text":"<p>Who can perform this operation?</p> <ul> <li>Platform Owner</li> </ul> <pre><code>onqlave application add your_app_name -d 'this is my application' -t application_technology -o application_owner_id\n</code></pre> <p>Then the returned output should include your created application ID</p> <pre><code>\ud83c\udf89 Done! Application created successfully.\nApplication ID: your-app-id-here\nFor more information, read our documentation at https://docs.onqlave.com\n</code></pre>"},{"location":"guides/cli-guide/administration/application/#describe-an-application","title":"Describe an application","text":"<p>Who can perform this operation?</p> <ul> <li>Platform Owner</li> </ul> <pre><code>onqlave application describe your_app_id\n</code></pre> <p>The output is formatted as a table:   </p> <pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Key          Value                   \u2502\n\u2502\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2502\n\u2502 ID           your_app_id_here        \u2502\n\u2502 Name         app-2                   \u2502\n\u2502 Description                          \u2502\n\u2502 Technology   server                  \u2502\n\u2502 Owner        owner_id                \u2502\n\u2502 APIKeys      0                       \u2502\n\u2502 Status       active                  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"guides/cli-guide/administration/application/#list-all-applications","title":"List all applications","text":"<p>Who can perform this operation?</p> <ul> <li>Platform Owner</li> </ul> <pre><code>onqlave application list\n</code></pre> <p>The output will be displayed as a table by default.</p> <p></p>"},{"location":"guides/cli-guide/administration/application/#update-an-application","title":"Update an application","text":"<p>Who can perform this operation?</p> <ul> <li>Platform Owner</li> </ul> <p>Currently, the Onqlave platform supports updating an application via its ID</p> <pre><code>onqlave application update your_application_id your_list_of_flags_and_values\n</code></pre> <p>To see the available flags, you can use this command:</p> <pre><code>onqlave application update\n</code></pre> <p>And explore all the flags:</p> <pre><code>Usage:\n onqlave application update [flags]\n\nExamples:\nonqlave application update\n\nFlags:\n -c, --application_cors string          Enter Application Cors\n -d, --application_description string   Enter Application Description\n -n, --application_name string          Enter Application Name\n -o, --application_owner string         Enter Application Owner\n -t, --application_technology string    Enter Application Technology\n -h, --help                             help for update\n\nGlobal Flags:\n     --json   Output logs as JSON.  Set to true if stdout is not a TTY.\n</code></pre>"},{"location":"guides/cli-guide/administration/application/#disable-an-application","title":"Disable an application","text":"<p>Who can perform this operation?</p> <ul> <li>Platform Owner</li> </ul> <pre><code>onqlave application disable your_app_id\n</code></pre>"},{"location":"guides/cli-guide/administration/application/#enable-an-application","title":"Enable an application","text":"<p>Who can perform this operation?</p> <ul> <li>Platform Owner</li> </ul> <pre><code>onqlave application enable your_app_id\n</code></pre>"},{"location":"guides/cli-guide/administration/application/#archive-an-application","title":"Archive an application","text":"<p>Who can perform this operation?</p> <ul> <li>Platform Owner</li> </ul> <p>Since we do not support deleting applications, you can archive it. Before archiving an application, you have to disable it like the previous step.</p> <pre><code>onqlave application archive your_app_id\n</code></pre>"},{"location":"guides/cli-guide/administration/application/#get-base-configuration-information-for-application","title":"Get base configuration information for Application","text":"<p>This information may be useful when you need to input the required flags during the creation of an application. To get these information, use the following command:</p> <pre><code>onqlave application base\n</code></pre> <p>Result will be organized either in tabular format by default or can be converted to JSON by appending --json flag at the end of the command</p> <p></p>"},{"location":"guides/cli-guide/administration/application/#explore-available-commands","title":"Explore available commands","text":"<pre><code>onqlave application\n</code></pre> <pre><code>This command is used to manage applications resources.\n\nUsage:\n onqlave application [command]\n\nExamples:\nonqlave application\n\nAvailable Commands:\n add         add application by name and attributes\n archive     archive application by ID\n describe    describe application by ID\n disable     disable application by ID\n enable      enable application by ID\n list        list applications\n update      update application by ID and attributes\n\nFlags:\n -h, --help   help for application\n\nGlobal Flags:\n     --json   Output logs as JSON.  Set to true if stdout is not a TTY.\n\nUse \"onqlave application [command] --help\" for more information about a command.\n</code></pre>"},{"location":"guides/cli-guide/administration/arx/","title":"Arx","text":""},{"location":"guides/cli-guide/administration/arx/#inspiration","title":"Inspiration","text":"<p>If you skipped the section about the meaning of Arx, you can have a look at the previous page.</p>"},{"location":"guides/cli-guide/administration/arx/#before-you-start","title":"Before you start","text":"<p>If you are familiar with allocating cloud computing resources for your company, you will be familiar with the concept of creating and assigning Arx to support your expected workload. With Onqlave, we follow a similar approach to allow you to optimise for speed and availability.</p>"},{"location":"guides/cli-guide/administration/arx/#review-the-provided-permissionrole","title":"Review the provided permission/role","text":"<p>Our current release includes 3 defined roles: Platform Owner, Platform Admin and Developer. Each role has its own set of permissions and supported operations. You may need to first skim through the documentation on roles and supported operations before proceeding.</p> <p>Next, you can explore a list of available commands or explore the base value of supported configuration of Arx.</p> <p>When you are ready to interact, you can go through the below list of commands to perform various operations.</p>"},{"location":"guides/cli-guide/administration/arx/#create-an-arx","title":"Create an Arx","text":"<p>Who can perform this operation?</p> <ul> <li>Platform Owner</li> </ul> <p>To create an Arx, simply input the following command into the CLI. Please pay attention to the flags and their available assigned values. There are several configurable attributes of an Arx that are grouped into 4 sections: - Planning: We support you in segregating the development, testing, staging and production by providing single purposed Arx for each of your desired environments, including: development, testing, staging, and production.</p> <ul> <li> <p>Cloud Provider: The choice of cloud provider determines which service is used to store your information. This allows for you to choose a cloud provider that your organisation already uses. Currently, we only support Google, but more providers are coming soon.</p> </li> <li> <p>Region: The choice of region allows you to determine within which geography you would like the data to reside. This may an important factor for data localisation / data residency requirements for sensitive data, whilst there can also be additional [speed and efficiency] benefits from having the data reside in the same geography as the rest of your information.</p> </li> <li> <p>Encryption mechanism: We only offer encryption services based on the highest performance encryption algorithms. You have the choice of AES-GCM-128, AES-GCM-256 or XCHACHA20-POLY1305, with the latter offering stronger encryption but at a lower processing speed. The key rotation frequency determines how regularly the encryption keys are changed. More regular rotations increase the level of security to ensure that your information remains safe.</p> </li> </ul> <p>You can append the -h or --help flag to the end of the add command to see the available flags:</p> <pre><code>onqlave arx add -h\n</code></pre> <p>The suggested output should look like this:</p> <pre><code>This command is used to add arx. Valid arx name, arx provider,  arx type, arx purpose, arx region, arx description, arx encryption method, arx rotation cycle, arx owner, arx spend limit and arx is default are required.\n\nUsage:\n  onqlave arx add [flags]\n\nExamples:\nonqlave arx add\n\nFlags:\n  -d, --arx_description string         enter arx description\n  -e, --arx_encryption_method string   enter arx encryption method\n  -i, --arx_is_default                 enter arx is default\n  -o, --arx_owner string               enter arx owner\n  -p, --arx_provider string            enter arx cloud provider\n  -u, --arx_purpose string             enter arx purpose\n  -r, --arx_region string              enter arx region\n  -c, --arx_rotation_cycle string      enter arx rotation cycle\n  -l, --arx_spend_limit uint           enter arx spend limit\n  -t, --arx_type string                enter arx type\n  -h, --help                           help for add\n\nGlobal Flags:\n      --json   JSON Output. Set to true if stdout is not a TTY.\n</code></pre> <p>Next, you can explore the base value of supported configuration of Arx.</p> <p>After that, when you are ready, just enter the add command:</p> <pre><code>onqlave arx add my_1st_arx -d 'this is my first arx' -e aes-gcm-128 -i true -o your_login_email@domain.com -p gcp -u development -r au -c monthly -t serverless\n</code></pre> <p>... and wait for the output logs.</p> <pre><code>Arx creation sometime takes up to 10 minutes.\n</code></pre> <p>If the creation is successful, the output will look similar to:</p> <pre><code>\ud83c\udf89 Done!  Arx created successfully.\nArx ID: {your-arx-id}\nFor more information, read our documentation at https://docs.onqlave.com/\n</code></pre>"},{"location":"guides/cli-guide/administration/arx/#set-a-default-arx","title":"Set a default Arx","text":"<p>Who can perform this operation?</p> <ul> <li>Platform Owner</li> </ul> <p>Input command:</p> <pre><code>onqlave arx default your_arx_id\n</code></pre> <p>Expected output:</p> <pre><code>Setting default arx sometime takes up to 10 minutes.\n\ud83c\udf89 Done!  Arx set default successfully.\nArx ID: {your-arx-id}\nFor more information, read our documentation at https://docs.onqlave.com/\n</code></pre>"},{"location":"guides/cli-guide/administration/arx/#describe-an-arx","title":"Describe an Arx","text":"<p>Who can perform this operation?</p> <ul> <li>Platform Owner</li> </ul> <p>You can retrieve all information of your Arx by using this command:</p> <pre><code>onqlave arx describe your_arx_id\n</code></pre> <pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Key                 Value               \u2502\n\u2502\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2502\n\u2502 Name                arx-1               \u2502\n\u2502 SpendLimit          0                   \u2502\n\u2502 Description                             \u2502\n\u2502 Purpose             development         \u2502\n\u2502 PlanID              serverless          \u2502\n\u2502 ProviderID          gcp                 \u2502\n\u2502 EncryptionMethodID  aes-gcm-128         \u2502\n\u2502 RotationCycleID     3-monthly           \u2502\n\u2502 Owner               owner_id            \u2502\n\u2502 IsDefault           false               \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n</code></pre>"},{"location":"guides/cli-guide/administration/arx/#view-a-list-of-arx","title":"View a list of Arx","text":"<p>Who can perform this operation?</p> <ul> <li>Platform Owner</li> </ul> <p>To see a list of your Arx from CLI, simply use this command:</p> <pre><code>onqlave arx list\n</code></pre> <p>The output will be formatted in tabular format </p>"},{"location":"guides/cli-guide/administration/arx/#update-an-arx","title":"Update an arx","text":"<p>Who can perform this operation?</p> <ul> <li>Platform Owner</li> </ul> <p>Firstly, to get help on which fields can be updated in an Arx, use this command:</p> <pre><code>onqlave arx update -h\n</code></pre> <p>and see the help output:</p> <pre><code>This command is used to update arx by ID. Arx id, arx name, arx region, arx encryption method, arx rotation cycle, arx owner, arx spend limit and arx is default are required.\n\nUsage:\n  onqlave arx update [flags]\n\nExamples:\nonqlave arx update\n\nFlags:\n  -i, --arx_is_default              Enter Arx Is Default\n  -n, --arx_name string             Enter Arx Name (default \"test\")\n  -o, --arx_owner string            Enter Arx Owner (default \"Default\")\n  -r, --arx_region string           Enter Arx Region - (AUS-EAST, AUS-WEST)\n  -c, --arx_rotation_cycle string   Enter Arx Rotation Cycle (default \"Default\")\n  -l, --arx_spend_limit uint        Enter Arx Spend Limit\n  -h, --help                        help for update\n\nGlobal Flags:\n      --json   Output logs as JSON.  Set to true if stdout is not a TTY\n</code></pre> <p>Once you decide which field to update, use this command and append your list of flags and values:</p> <pre><code>onqlave arx update arx_id &lt;your_list_of_flags_and_values&gt;\n</code></pre> <p>Output should look like this:</p> <pre><code>\ud83c\udf89 Done! Arx updated successfully.\nArx ID: your_arx_id\nFor more information, read our documentation at https://docs.onqlave.com\n</code></pre>"},{"location":"guides/cli-guide/administration/arx/#seal-an-arx","title":"Seal an Arx","text":"<p>Who can perform this operation?</p> <ul> <li>Platform Owner</li> </ul> <p>This is a feature supporting you to temporarily disable an Arx and enable it in the future without having to reconfigure everything from scratch. To seal an Arx, include its ID in this command:</p> <pre><code>onqlave arx seal arx_id_here\n</code></pre> <p>And see the logged result:</p> <pre><code>Arx seal sometime takes up to 10 minutes.\n\ud83c\udf89 Done!  Arx sealed successfully.\nFor more information, read our documentation at https://docs.onqlave.com/\n\n</code></pre>"},{"location":"guides/cli-guide/administration/arx/#unseal-an-arx","title":"Unseal an Arx","text":"<p>Who can perform this operation?</p> <ul> <li>Platform Owner</li> </ul> <p>In contrary to seal, we just need to alter the command:</p> <pre><code>onqlave arx unseal arx_id_here\n</code></pre> <p>And see the result:</p> <pre><code>Arx unseal sometime takes up to 10 minutes.\n\ud83c\udf89 Done!  Arx unsealed successfully.\nFor more information, read our documentation at https://docs.onqlave.com/\n</code></pre>"},{"location":"guides/cli-guide/administration/arx/#delete-an-arx","title":"Delete an Arx","text":"<p>Who can perform this operation?</p> <ul> <li>Platform Owner</li> </ul> <pre><code>onqlave arx delete your_arx_id\n</code></pre> <pre><code>\ud83c\udf89 Done!  Arx deleted successfully.\nFor more information, read our documentation at https://docs.onqlave.com/\n</code></pre>"},{"location":"guides/cli-guide/administration/arx/#get-base-configuration-information-for-arx","title":"Get base configuration information for Arx","text":"<p>This information may be useful when you need to input the required flags during the creation of an Arx. To get this information, use the following command:</p> <pre><code>onqlave arx base\n</code></pre> <p>The result will be organized in a tabular format.</p> <p></p>"},{"location":"guides/cli-guide/administration/arx/#explore-the-supported-interaction-commands-with-arx","title":"Explore the supported interaction commands with Arx","text":"<pre><code>onqlave arx\nThis command is used to manage arx resources.\n\nUsage:\n  onqlave arx [command]\n\nExamples:\nonqlave arx\n\nAvailable Commands:\n  add         add arx by name and attributes\n  base        get base arx info\n  default     set default arx by ID\n  delete      delete arx by ID\n  describe    describe arx by ID\n  list        list arx\n  retry       retry adding arx by ID and attributes\n  seal        seal arx by ID\n  unseal      unseal arx by ID\n  update      update arx by ID and attributes\n\nFlags:\n  -h, --help   help for arx\n\nGlobal Flags:\n      --json   Output logs as JSON.  Set to true if stdout is not a TTY.\n\nUse \"onqlave arx [command] --help\" for more information about a command.\n</code></pre>"},{"location":"guides/cli-guide/platform/access/","title":"Access","text":""},{"location":"guides/cli-guide/platform/access/#retrieving-information","title":"Retrieving information","text":"<p>Currently, from the CLI, we only support retrieving information about participating users. To get all the information of your participating users, you can use this command:</p> <pre><code>onqlave user list\n</code></pre> <p>The output should look like this:</p> <p></p> <p>To add or invite new users, you need to do so in the dashboard, as explained here.</p>"},{"location":"guides/cli-guide/platform/account/","title":"Account","text":""},{"location":"guides/cli-guide/platform/account/#before-you-start","title":"Before you start","text":"<p>You can refer to this section on the dashboard for more details.</p> <p>Or you can refer to this section for getting help about available commands.</p>"},{"location":"guides/cli-guide/platform/account/#retrieving-tenant-information","title":"Retrieving tenant information","text":"<p>You can use this command to retrieve the organisation/tenant information:</p> <pre><code>onqlave tenant describe\n</code></pre> <p>The result should be displayed in tabular format by default and look like this:</p> <pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Key          Value                         \u2502\n\u2502\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2502\n\u2502 Id           tenant--cr7ZHkeyjdWycfsPF     \u2502\n\u2502 Name         dc-tenant-1                   \u2502\n\u2502 Label        theirs                        \u2502\n\u2502 OwnerEmail   your_email@host.com           \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"guides/cli-guide/platform/account/#updating-tenant-information","title":"Updating tenant information","text":"<p>There are two fields that you can update: label and name</p> <pre><code>onqlave tenant update -l dcm -n dc-tenant-1-updated\n</code></pre> <p>The successful output appears as follows:</p> <pre><code>\ud83c\udf89 Done!  Tenant updated successfully\n</code></pre> <p>You can double check the updated result by using the describe command above:</p> <pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Key          Value                         \u2502\n\u2502\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2502\n\u2502 Id           tenant--B8dxGtiyx2CWG8mYtvpfr \u2502\n\u2502 Name         dev-tenant-1-updated          \u2502\n\u2502 Label        your_label                    \u2502\n\u2502 OwnerEmail   po.onclave@gmail.com          \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"guides/cli-guide/platform/account/#explore-available-commands","title":"Explore available commands","text":"<pre><code>onqlave tenant\n</code></pre> <pre><code>This command is used to manage tenants' resources.\n\nUsage:\n onqlave tenant [command]\n\nExamples:\nonqlave tenant\n\nAvailable Commands:\n describe    describe tenant\n update      update tenant by name and label\n\nFlags:\n -h, --help   help for tenant\n\nGlobal Flags:\n     --json   JSON Output. Set to true if stdout is not a TTY.\n\nUse \"onqlave tenant [command] --help\" for more information about a command.\n</code></pre>"},{"location":"guides/sdks/sdk-c-sharp/","title":"C#","text":"<p>The SDK for C# will be available soon!</p>"},{"location":"guides/sdks/sdk-flutter/","title":"Flutter","text":"<p>The SDK for Flutter will be available soon!</p>"},{"location":"guides/sdks/sdk-go/","title":"Description","text":"<p>This go SDK is designed to help developers easily integrate Onqlave <code>Encryption As A Service</code> into their go backend.</p> <p> </p>"},{"location":"guides/sdks/sdk-go/#features","title":"Features","text":"<ul> <li>Encrypt/Decrypt piece of information</li> <li>Encrypt/Decrypt stream of data</li> </ul>"},{"location":"guides/sdks/sdk-go/#installation","title":"Installation","text":""},{"location":"guides/sdks/sdk-go/#requirements","title":"Requirements","text":"<ul> <li>go 1.18 and above</li> </ul>"},{"location":"guides/sdks/sdk-go/#configuration","title":"Configuration","text":"<p>Make sure your project is using Go Modules (it will have a go.mod file in its root if it already is):</p> <pre><code>go mod init\n</code></pre> <p>Then, reference onqlave-go in a Go program with import:</p> <pre><code>import (\n  onqlave \"github.com/onqlavelabs/onqlave-go\"\n)\n</code></pre> <p>Alternatively, <code>go get github.com/onqlavelabs/onqlave-go</code> can also be used to download the required dependencies</p>"},{"location":"guides/sdks/sdk-go/#usage","title":"Usage","text":"<p>To use this SDK, you firstly need to obtain credential to access an Onqlave Arx by signing up to Onqlave and following instruction to create your 1st Onqlave Arx. Documentation can be found at Onqlave Technical Documentation.</p> <p>The Onqlave Go module is used to perform operations on the configured ARX such as encrypting, and decrypting for an Onqlave_ARX. example:</p> <p>To use this module, the Onqlave client must first be initialized as follows.</p> <pre><code>import (\n    \"github.com/onqlavelabs/onqlave-go/onqlave/onqlaveconnection\"\n    \"github.com/onqlavelabs/onqlave-go/onqlave/onqlavecredentials\"\n    \"github.com/onqlavelabs/onqlave-go/onqlave/onqlaveencryption\"\n)\n\ndebugOption := onqlaveencryption.WithDebug(true) //This option lets you choose whether to start SDK operation in debug mode to info mode\narxOption := onqlaveencryption.WithArx(\"&lt;arx_url&gt;\") //This is the Arx URL retruned of the API Key created during setup. Keep in in a safe place.\ncredentialOption := onqlaveencryption.WithCredential(onqlavecredentials.Credential{\n    AccessKey:  \"&lt;api_access_key&gt;\",   //This is the API Access Key returned of the API Key created during setup. Keep in in a safe place.\n    SigningKey: \"&lt;api_signing_key&gt;\",  //This is the API Signing Key retruned of the API Key created during setup. Keep in in a safe place.\n    SecretKey:  \"&lt;api_secret_key&gt;\",   //This is the API Secret Key retruned of the API Key created during setup. Keep in in a safe place.\n})\nretryOption := onqlaveencryption.WithRetry(onqlaveconnection.RetrySettings{\n    Count:       &lt;count&gt;,         //Number of times to retry calling server endpoints in case of connection issue\n    WaitTime:    &lt;wait_time&gt;,     //How long to wait between each retry\n    MaxWaitTime: &lt;max_wait_time&gt;, //How long to wait in total for operation to finish\n})\n\nservice := encryption.NewEncryption(debugOption, arxOption, credentialOption, retryOption)\ndefer service.Close()\n</code></pre> <p>All Onqlave APIs must be invoked using a <code>Encryption</code> instance.</p>"},{"location":"guides/sdks/sdk-go/#encrypt","title":"Encrypt","text":"<p>To encrypt data, use the Encrypt(plainText, associatedData []byte) method of the <code>Encryption</code> service. The plainText parameter is the <code>[]byte</code> representation of data you are wishing to encrypt. The associatedData parameter the <code>[]byte</code> representation of associated data which can be used to improve the authenticity of the data (it is not mandatory), as shown below.</p> <p>Encrypt call:</p> <pre><code>\n//Initilise the new encryption service using configurations as per [Usage]\nservice := encryption.NewEncryption(debugOption, arxOption, credentialOption, retryOption)\ndefer service.Close()\n\nplainData := []byte(\"this data needs to be encrypted\")\nassociatedData := []byte(\"this data needs to be authenticated, but not encrypted\") //This can be an arbitrary piece of information you can use to for added security purpose.\ncipherData, err := service.Encrypt(plainData, associatedData)\n</code></pre>"},{"location":"guides/sdks/sdk-go/#decrypt","title":"Decrypt","text":"<p>To decrypt data, use the Decrypt(cipherData, associatedData []byte) method of the <code>Encryption</code> service. The cipherData parameter is the <code>[]byte</code> representation of data you are wishing to decrypt (previousely encrypted). The associatedData parameter the <code>[]byte</code> representation of associated data which can be used to improve the authenticity of the data (it is not mandatory), as shown below.</p> <pre><code>\n//Initilise the new encryption service using configurations as per [Usage]\nservice := encryption.NewEncryption(debugOption, arxOption, credentialOption, retryOption)\ndefer service.Close()\n\ncipherData := []byte(\"this data is already encrypted using `Encrypt` method\")\nassociatedData := []byte(\"this data needs to be authenticated, but not encrypted\") //This can be an arbitrary piece of information you can use to for added security purpose.\nplainData, err := service.Decrypt(cipherData, associatedData)\n</code></pre>"},{"location":"guides/sdks/sdk-go/#encrypt-stream","title":"Encrypt Stream","text":"<p>To encrypt stream of data, use the EncryptStream(plainStream io.Reader, cipherStream io.Writer, associatedData []byte) method of the <code>Encryption</code> service. The plainStream parameter is the <code>io.Reader</code> stream of data you are wishing to encrypt. The cipherStream parameter is the <code>io.Write</code> stream you are wishing to write the cipher data to. The associatedData parameter the <code>[]byte</code> representation of associated data which can be used to improve the authenticity of the data (it is not mandatory), as shown below.</p> <pre><code>\n//Initilise the new encryption service using configurations as per [Usage]\nservice := encryption.NewEncryption(debugOption, arxOption, credentialOption, retryOption)\ndefer service.Close()\n\nplainStream, _ := os.OpenFile(\"&lt;file or network stream you are wishing to encrypt&gt;\", os.O_RDONLY, 0666)\nassociatedData := []byte(\"this data needs to be authenticated, but not encrypted\") //This can be an arbitrary piece of information you can use to for added security purpose.\ncipherStream,_ := os.OpenFile(\"&lt;file or network stream you are whishing to stream the encrypted data to&gt;\", os.O_WRONLY, 0666)\nerr := service.EncryptStream(plainStream, cipherStream, associatedData)\n</code></pre>"},{"location":"guides/sdks/sdk-go/#decrypt-stream","title":"Decrypt Stream","text":"<p>To decrypt data, use the DecryptStream(cipherStream io.Reader, plainStream io.Writer, associatedData []byte) method of the <code>Encryption</code> service. The cipherStream parameter is the <code>io.Reader</code> stream of data you are wishing to decrypt and it was originally encrypted using EncryptStream. The plainStream parameter is the <code>io.Write</code> stream you are wishing to write the plain data back to. The associatedData parameter the <code>[]byte</code> representation of associated data which can be used to improve the authenticity of the data (it is not mandatory), as shown below.</p> <pre><code>\n//Initilise the new encryption service using configurations as per [Usage]\nservice := encryption.NewEncryption(debugOption, arxOption, credentialOption, retryOption)\ndefer service.Close()\n\ncipherStream, _ := os.OpenFile(\"&lt;file or network stream you are wishing to decrypt&gt;\", os.O_RDONLY, 0666)\nassociatedData := []byte(\"this data needs to be authenticated, but not encrypted\") //This can be an arbitrary piece of information you can use to for added security purpose.\nplainStream,_ := os.OpenFile(\"&lt;file or network stream you are whishing to stream the decrypted data to&gt;\", os.O_WRONLY, 0666)\nerr := service.DecryptStreamcipherStream, plainStream, associatedData)\n</code></pre>"},{"location":"guides/sdks/sdk-go/#reporting-a-vulnerability","title":"Reporting a Vulnerability","text":"<p>If you discover a potential security issue in this project, please reach out to us at security@onqlave.com. Please do not create public GitHub issues or Pull Requests, as malicious actors could potentially view them.</p>"},{"location":"guides/sdks/sdk-java/","title":"onqlave-java","text":""},{"location":"guides/sdks/sdk-java/#description","title":"Description","text":"<p>This Java SDK is designed to help developers easily integrate Onqlave <code>Encryption As A Service</code> into their Java backend.</p> <p></p>"},{"location":"guides/sdks/sdk-java/#features","title":"Features","text":"<ul> <li>Encrypt/Decrypt piece of information</li> <li>Encrypt/Decrypt stream of data</li> </ul>"},{"location":"guides/sdks/sdk-java/#installation","title":"Installation","text":""},{"location":"guides/sdks/sdk-java/#requirements","title":"Requirements","text":"<ul> <li>OpenJDK 17 or higher</li> <li>Maven &gt;= 3.x.x</li> </ul>"},{"location":"guides/sdks/sdk-java/#configuration","title":"Configuration","text":"<p>Make sure your project is using Maven Modules (it will have a <code>pom.xml</code> file in its root if it already is):</p> <pre><code>mvn install\n</code></pre> <p>Then, reference onqlave-java in a Java program with import:</p> <pre><code>import com.onqlave.encryption.Encryption;\n</code></pre>"},{"location":"guides/sdks/sdk-java/#usage","title":"Usage","text":"<p>To use this SDK, you firstly need to obtain credential to access an Onqlave Arx by signing up to Onqlave and following instruction to create your 1st Onqlave Arx. Documentation can be found at Onqlave Technical Documentation.</p> <p>The Onqlave Java module is used to perform operations on the configured ARX such as encrypting, and decrypting for an Onqlave_ARX. example:</p> <p>To use this module, the Onqlave client must first be initialized as follows.</p> <pre><code>package com.example;\n\nimport com.onqlave.contract.Configuration;\nimport com.onqlave.contract.Credential;\nimport com.onqlave.contract.RetrySettings;\nimport com.onqlave.encryption.Encryption;\n\npublic class Main {\n    public static void main(String[] agrs) {\n        Credential credential = new Credential(\n                \"&lt;api_access_key&gt;\",           //This is the API Access Key returned of the API Key created during setup. Keep in a safe place.\n                \"&lt;api_signing_key&gt;\",          //This is the API Signing Key retruned of the API Key created during setup. Keep in a safe place.\n                \"&lt;api_secret_key&gt;\");          //This is the API Secret Key retruned of the API Key created during setup. Keep in a safe place.\n        RetrySettings retry = new RetrySettings(\n                \"&lt;count&gt;\",                //Number of times to retry calling server endpoints in case of connection issue\n                \"&lt;wait_time&gt;\",            //How long to wait between each retry\n                \"&lt;max_wait_time&gt;\");        //How long to wait in total for operation to finis\n        // Initial\n        Encryption encryption = new Encryption(credential, retry, \"&lt;arx_url&gt;\", true);\n    }\n}\n</code></pre> <p>All Onqlave APIs must be invoked using a <code>Encryption</code> instance.</p>"},{"location":"guides/sdks/sdk-java/#encrypt","title":"Encrypt","text":"<p>To encrypt data, use the Encrypt(byte[] planData, byte[] associatedData) method of the Encryption service. The plainText parameter is the <code>byte[]</code> representation of data you are wishing to encrypt. The associatedData parameter the <code>byte[]</code> representation of associated data which can be used to improve the authenticity of the data (it is not mandatory), as shown below.</p> <p>Encryption call:</p> <pre><code>    Encryption serivce = new Encryption(credential, retry, \"&lt;arx_url&gt;\", true);\n    String plainText = \"This is a plain text string\";\n    String associatedData = \"this data needs to be authenticated, but not encrypted\";\n    byte[] cipherData = null;\n    try {\n        cipherData = serivce.Encrypt(plainText.getBytes(), associatedData.getBytes());\n    } catch (Exception e) {\n        //TODO: handle exception here.\n        System.out.println(e.getMessage());\n    }\n</code></pre>"},{"location":"guides/sdks/sdk-java/#decrypt","title":"Decrypt","text":"<p>To decrypt data, use the Decrypt(byte[] cipherText, byte[] associatedData) method of the <code>Encryption</code> service. The cipherData parameter is the <code>byte[]</code> representation of data you are wishing to decrypt (previously encrypted). The associatedData parameter the <code>byte[]</code> representation of associated data which can be used to improve the authenticity of the data (it is not mandatory), as shown below.</p> <p>Decryption call:</p> <pre><code>    Encryption serivce = new Encryption(credential, retry, \"&lt;arx_url&gt;\", true);\n    String plainText = \"This is cipher data is already encrypted using `Encrypt` method\";\n    String associatedData = \"this data needs to be authenticated, but not encrypted\";\n    byte[] cipherData = null;\n    try {\n        cipherData = serivce.Decrypt(plainText.getBytes(),associatedData.getBytes());\n    } catch (Exception e) {\n        //TODO: handle exception here.\n        System.out.println(e.getMessage());\n    }\n</code></pre>"},{"location":"guides/sdks/sdk-java/#encrypt-stream","title":"Encrypt Stream","text":"<p>To encrypt stream of data, use the EncryptStream(InputStream plainStream, OutputStream cipherStream, byte[] associatedData) method of the <code>Encryption</code> service. The plainStream parameter is the <code>InputStream</code> stream of data you are wishing to encrypt. The cipherStream parameter is the <code>OutputStream</code> stream you are wishing to write the cipher data to. The associatedData parameter the <code>byte[]</code> representation of associated data which can be used to improve the authenticity of the data (it is not mandatory), as shown below.</p> <pre><code>    Encryption serivce = new Encryption(credential, retry, \"&lt;arx_url&gt;\", true);\n    String plainText = \"This is cipher data is already encrypted using `Encrypt` method\";\n    String associatedData = \"this data needs to be authenticated, but not encrypted\";\n    InputStream encryptPlainStream = new ByteArrayInputStream(plainText.getBytes());\n    ByteArrayOutputStream encryptCipherStream = new ByteArrayOutputStream();\n    try {\n        service.EncryptStream(encryptPlainStream, encryptCipherStream, associatedData.getBytes());\n    } catch (Exception e) {\n        //TODO: handle exception here.\n        System.out.println(e.getMessage());\n    }\n</code></pre>"},{"location":"guides/sdks/sdk-java/#decrypt-stream","title":"Decrypt Stream","text":"<p>To decrypt stream of data, use the DecryptStream(InputStream cipherStream,OutputStream plainStream, byte[] associatedData) method of the <code>Encryption</code> service. The cipherStream parameter is the <code>InputStream</code> stream of data you are wishing to decrypt and it was originally encrypted using EncryptStream. The plainStream parameter is the <code>OutputStream</code> stream you are wishing to write the plain data back to. The associatedData parameter the <code>byte[]</code> representation of associated data which can be used to improve the authenticity of the data (it is not mandatory), as shown below.</p> <pre><code>    String plainText = \"This is cipher data is already encrypted using `Encrypt` method\";\n    Encryption serivce = new Encryption(credential, retry, \"&lt;arx_url&gt;\", true);\n    ByteArrayInputStream dataEncrypted = new ByteArrayInputStream(encryptCipherStream.toByteArray());\n    ByteArrayOutputStream decryptPlainStream = new ByteArrayOutputStream();\n\n    try {\n        serivce.DecryptStream(dataEncrypted,decryptPlainStream, associatedData.getBytes());\n    } catch (Exception e) {\n        //TODO: handle exception here.\n        System.out.println(e.getMessage());\n    }\n</code></pre>"},{"location":"guides/sdks/sdk-java/#reporting-a-vulnerability","title":"Reporting a Vulnerability","text":"<p>If you discover a potential security issue in this project, please reach out to us at security@onqlave.com. Please do not create public GitHub issues or Pull Requests, as malicious actors could potentially view them.</p>"},{"location":"guides/sdks/sdk-node/","title":"Description","text":"<p>This node SDK is designed to help developers easily integrate Onqlave <code>Encryption As A Service</code> into their node backend.</p> <p> </p>"},{"location":"guides/sdks/sdk-node/#features","title":"Features","text":"<ul> <li>Encrypt/Decrypt piece of information</li> <li>Encrypt/Decrypt stream of data</li> </ul>"},{"location":"guides/sdks/sdk-node/#installation","title":"Installation","text":"<pre><code>npm install @onqlavelabs/onqlave-node\n\n</code></pre>"},{"location":"guides/sdks/sdk-node/#requirements","title":"Requirements","text":"<ul> <li>Node 16.0.0 and above</li> </ul>"},{"location":"guides/sdks/sdk-node/#configuration","title":"Configuration","text":""},{"location":"guides/sdks/sdk-node/#usage","title":"Usage","text":"<p>To use this SDK, you firstly need to obtain credential to access an Onqlave Arx by signing up to Onqlave and following instruction to create your 1st Onqlave Arx.</p> <p>The Onqlave Node module is used to perform operations on the configured ARX such as encrypting, and decrypting for an Onqlave_ARX. example:</p> <p>To use this module, the Onqlave client must first be initialized as follows.</p> <pre><code>const { Encryption, withCredential, withRetry, withArx, Credential, RetrySettings } = require('@onqlavelabs/onqlave-node');\nconst { createReadStream, createWriteStream } = require('fs');\n</code></pre> <p>Or using ES modules</p> <pre><code>import { Encryption, withCredential, withRetry, withArx, Credential, RetrySettings }  from '@onqlavelabs/onqlave-node';\nimport { createReadStream, createWriteStream } from 'fs';\n\nconst arxOption = withArx(\"&lt;arx_url&gt;\"); //This is the Arx URL retruned of the API Key created during setup. Keep in in a safe place.\nconst apiKey = \"&lt;api_access_key&gt;\"       //This is the API Access Key returned of the API Key created during setup. Keep in in a safe place.\nconst signingKey = \"&lt;api_signing_key&gt;\"  //This is the API Signing Key retruned of the API Key created during setup. Keep in in a safe place.\nconst secretKey = \"&lt;api_secret_key&gt;\"    //This is the API Secret Key retruned of the API Key created during setup. Keep in in a safe place.\nconst credentialOption = withCredential(new Credential(apiKey, signingKey, secretKey));\nconst retryOption = withRetry(new RetrySettings(2, 400, 2000));\n\nconst service = new Encryption(arxOption, credentialOption, retryOption);\n</code></pre> <p>All Onqlave APIs must be invoked using a <code>Encryption</code> instance.</p>"},{"location":"guides/sdks/sdk-node/#encrypt","title":"Encrypt","text":"<p>To encrypt data, use the Encrypt(plainData, associatedData) method of the <code>Encryption</code> service. The plainText parameter is the <code>Buffer</code> representation of data you are wishing to encrypt. The associatedData parameter the <code>Buffer</code> representation of associated data which can be used to improve the authenticity of the data (it is not mandatory), as shown below.</p> <pre><code>\n//Initilise the new encryption service using configurations as per [Usage]\nconst service = new Encryption(arxOption, credentialOption, retryOption);\n\nconst plainData = Buffer.from(\"This is the plain data\");\nconst additionalData = Buffer.from(\"This is to authenticated not to encrypt\"); //This can be an arbitrary piece of information you can use to for added security purpose.\nconst cipherData = await service.Encrypt(plainData, associatedData);\n</code></pre>"},{"location":"guides/sdks/sdk-node/#decrypt","title":"Decrypt","text":"<p>To encrypt data, use the Decrypt(cipherData, associatedData) method of the <code>Encryption</code> service. The cipherData parameter is the <code>Buffer</code> representation of data you are wishing to decrypt (previousely encrypted). The associatedData parameter the <code>Buffer</code> representation of associated data which can be used to improve the authenticity of the data (it is not mandatory), as shown below.</p> <pre><code>\n//Initilise the new encryption service using configurations as per [Usage]\nconst service = new Encryption(arxOption, credentialOption, retryOption);\n\nconst cipherData = Buffer.from(\"this data is already encrypted using `Encrypt` method\")\nconst additionalData = Buffer.from(\"This is to authenticated not to encrypt\"); //This can be an arbitrary piece of information you can use to for added security purpose.\nconst plainData = await service.Decrypt(cipherData, associatedData);\n</code></pre>"},{"location":"guides/sdks/sdk-node/#encrypt-stream","title":"Encrypt Stream","text":"<p>To encrypt stream of data, use the encryptStream(plainStream, cipherStream, associatedData) method of the <code>Encryption</code> service. The plainStream parameter is the <code>ReadStream</code> stream of data you are wishing to encrypt. The cipherStream parameter is the <code>WriteStream</code> stream you are wishing to write the cipher data to. The associatedData parameter the <code>Buffer</code> representation of associated data which can be used to improve the authenticity of the data (it is not mandatory), as shown below.</p> <pre><code>\n//Initilise the new encryption service using configurations as per [Usage]\nconst service = new Encryption(arxOption, credentialOption, retryOption);\n\nconst plainStream = createReadStream(\"&lt;file or network stream you are wishing to encrypt&gt;\", { highWaterMark: 64 * 1024 });\nconst cipherStream = createWriteStream(\"&lt;file or network stream you are whishing to stream the encrypted data to&gt;\", { encoding: 'binary' });\nconst associatedData = Buffer.from(\"this data needs to be authenticated, but not encrypted\"); //This can be an arbitrary piece of information you can use to for added security purpose.\nawait service.encryptStream(plainStream, cipherStream, additionalData);\nplainStream.close();\ncipherStream.close();\n</code></pre>"},{"location":"guides/sdks/sdk-node/#decrypt-stream","title":"Decrypt Stream","text":"<p>To encrypt data, use the decryptStream(cipherStream, plainStream, associatedData) method of the <code>Encryption</code> service. The cipherStream parameter is the <code>ReadStream</code> stream of data you are wishing to decrypt and it was originally encrypted using EncryptStream. The plainStream parameter is the <code>WriteStream</code> stream you are wishing to write the plain data back to. The associatedData parameter the <code>Buffer</code> representation of associated data which can be used to improve the authenticity of the data (it is not mandatory), as shown below.</p> <pre><code>\n//Initilise the new encryption service using configurations as per [Usage]\nconst service = new Encryption(arxOption, credentialOption, retryOption);\n\nconst cipherStream = createReadStream(\"&lt;file or network stream you are wishing to decrypt&gt;\", { encoding: 'binary' });\nconst plainStream = createWriteStream(\"&lt;file or network stream you are whishing to stream the decrypted data to&gt;\", { highWaterMark: 64 * 1024 });\nconst associatedData = Buffer.from(\"this data needs to be authenticated, but not encrypted\"); //This can be an arbitrary piece of information you can use to for added security purpose.\nawait service.decryptStream(cipherStream, plainStream, additionalData);\nplainStream.close();\ncipherStream.close();\n</code></pre>"},{"location":"guides/sdks/sdk-node/#reporting-a-vulnerability","title":"Reporting a Vulnerability","text":"<p>If you discover a potential security issue in this project, please reach out to us at security@onqlave.com. Please do not create public GitHub issues or Pull Requests, as malicious actors could potentially view them.</p>"},{"location":"guides/sdks/sdk-overview/","title":"Sdk overview","text":""},{"location":"guides/sdks/sdk-overview/#currently-supported-languages","title":"Currently supported languages","text":"<p>At the moment, we have enabled SDKs for Go and NodeJS, please kindly check them out below.</p>"},{"location":"guides/sdks/sdk-overview/#go","title":"Go","text":"<p>The documentation for Go's SDK can be found here and the corresponding source code repository is published here</p>"},{"location":"guides/sdks/sdk-overview/#nodejs","title":"NodeJS","text":"<p>The documentation for NodeJS's SDK can be found here and the corresponding source code repository is published here</p>"},{"location":"guides/sdks/sdk-overview/#incoming-sdks","title":"Incoming SDKs","text":"<p>We are working for the upcoming SDKs for commonly used languages such as Python, C#, etc.. They will be available soon!</p>"},{"location":"guides/sdks/sdk-php/","title":"PHP","text":"<p>The SDK for PHP will be available soon!</p>"},{"location":"guides/sdks/sdk-py/","title":"Python","text":"<p>This Python SDK is designed to help developers easily integrate Onqlave <code>Encryption As A Service</code> into their python backend.</p> <p> </p>"},{"location":"guides/sdks/sdk-py/#features","title":"Features","text":"<ul> <li>Encrypt/decrypt pieces of information</li> <li>Encrypt/decrypt stream of data</li> </ul>"},{"location":"guides/sdks/sdk-py/#installation","title":"Installation","text":""},{"location":"guides/sdks/sdk-py/#requirements","title":"Requirements","text":"<ul> <li>Python 3.8 and above</li> </ul>"},{"location":"guides/sdks/sdk-py/#configuration","title":"Configuration","text":"<p>To install, simply using this command:</p> <pre><code>pip install onqlave-python\n</code></pre> <p>You can also check the package detail on PyPI</p>"},{"location":"guides/sdks/sdk-py/#usage","title":"Usage","text":"<p>To use this SDK, you firstly need to obtain credentials to access an Onqlave Arx by signing up to Onqlave and following instruction to create your first Onqlave Arx. Documentation can be found at Onqlave Technical Documentation.</p> <p>The Onqlave Python module is used to perform operations on the configured Arx such as encrypting and decryptin for an Onqlave Arx. </p> <p>To use this module, an Onqlave client should be initialized as follows. (Please note that there are 3 ways of loading configurations specified in the examples/ directory.)</p> <pre><code>from onqlave.encryption import options\nfrom onqlave.encryption.encryption import Encryption\nfrom onqlave.credentials.credentials import Credential\nfrom onqlave.connection.client import RetrySettings\n\ncred_file_path = \"credentials.json\"\n\narx_option = options.ArxOption()\ncredential_option = Credential()\n\narx_option.load_arx_url_from_json(cred_file_path)\ncredential_option.load_config_from_json(cred_file_path)\n\nretry_option = RetrySettings(count=1,wait_time=1,max_wait_time=2) \n\nencryption_engine = Encryption(\n    debug_option=debug_option,\n    arx_option=arx_option,\n    credential_option=credential_option,\n    retry_setting=retry_option\n)\n</code></pre>"},{"location":"guides/sdks/sdk-py/#encrypt","title":"Encrypt","text":"<p>To encrypt data, use the encrypt(plaintext: bytearray, associated_data: bytearray) method of the <code>Encryption</code> service. The plaintext parameter is the <code>bytearray</code> representation of data you are wishing to encrypt. The associated_data parameter the <code>bytearray</code> representation of associated data which can be used to improve the authenticity of the data (it is not mandatory), as shown below.</p> <pre><code>plaintext = \"hello world\" # your data goes here\nassociated_data = \"auth\" # your authentication data goes here\ncipher_text = encryption_engine.encrypt(plaintext.encode(), associated_data.encode())\n</code></pre>"},{"location":"guides/sdks/sdk-py/#decrypt","title":"Decrypt","text":"<p>To decrypt data, use the decrypt(cipher_data: bytearray, associated_data: bytearray) method of the <code>Encryption</code> service. The cipher_data parameter is the <code>bytearray</code> representation of data you are wishing to decrypt (previousely encrypted). The associated_data parameter the <code>bytearray</code> representation of associated data which can be used to improve the authenticity of the data (it is not mandatory), as shown below.</p> <pre><code>decrypted_ciphertext = encryption_engine.decrypt(cipher_text,associated_data.encode())\n</code></pre>"},{"location":"guides/sdks/sdk-py/#encrypt-stream","title":"Encrypt Stream","text":"<p>To encrypt stream of data, use the encrypt_stream(plain_stream io.Reader, cipher_stream io.Writer, associated_data bytearray) method of the <code>Encryption</code> service. The plain_stream parameter is the <code>io.Reader</code> stream of data you are wishing to encrypt. The cipher_stream parameter is the <code>io.Write</code> stream you are wishing to write the cipher data to. The associated_data parameter the <code>bytearray</code> representation of associated data which can be used to improve the authenticity of the data (it is not mandatory), as shown below.</p> <pre><code>plain_file_stream = open(\"path to your plaintext file\",\"rb\")\nplain_stream = io.BytesIO(plain_file_stream.read())\ncipher_stream = io.BytesIO()\n\nencryption_engine.encrypt_stream(plain_stream,cipher_stream,associated_data.encode())\ncipher_stream.seek(0)\n</code></pre>"},{"location":"guides/sdks/sdk-py/#decrypt-stream","title":"Decrypt Stream","text":"<p>To decrypt data, use the decrypt_stream(cipher_stream io.io.BytesIO, plain_stream io.BytesIO, associated_data []byte) method of the <code>Encryption</code> service. The cipher_stream parameter is the <code>io.BytesIO()</code> stream of data you are wishing to decrypt and it was originally encrypted using encrypt_stream. The plain_stream parameter is the <code>io.BytesIO()</code> stream you are wishing to write the plain data back to. The associated_data parameter the <code>bytearray</code> representation of associated data which can be used to improve the authenticity of the data (it is not mandatory), as shown below.</p> <pre><code>decrypted_stream = io.BytesIO()\nencryption_engine.decrypt_stream(\n    cipher_stream=cipher_stream,\n    plain_stream=decrypted_stream,\n    associated_data=associated_data.encode()\n)\ndecrypted_stream.seek(0)\n\nwith open(\n    \"path to your decrypted file\",\n    \"wb\"\n) as result:\n    result.write(decrypted_stream.read())\n</code></pre>"},{"location":"guides/sdks/sdk-py/#reporting-a-vulnerability","title":"Reporting a Vulnerability","text":"<p>If you discover a potential security issue in this project, please reach out to us at security@onqlave.com. Please do not create public GitHub issues or Pull Requests, as malicious actors could potentially view them.</p>"},{"location":"guides/sdks/sdk-rust/","title":"Rust","text":"<p>The SDK for Rust will be available soon!</p>"},{"location":"guides/web-app-guide/authentication/","title":"Authentication","text":""},{"location":"guides/web-app-guide/authentication/#double-check-on-your-account","title":"Double check on your account","text":"<p>Make sure that you registered for the alpha release, received our email and followed the instructions specified within the email.</p>"},{"location":"guides/web-app-guide/authentication/#lets-get-going","title":"Let's get going","text":"<p>To begin the authentication process, enter your email in the prompt:</p> <p></p> <p>If your email is activated and you have changed your password for the first time, the prompt will appear as below:</p> <p></p> <p>If you haven't changed your password yet, you should follow the instructions provided by the prompts to set a new password.</p>"},{"location":"guides/web-app-guide/overview-gui/","title":"Overview - Dashboard","text":""},{"location":"guides/web-app-guide/overview-gui/#what-does-the-dashboard-of-the-onqlave-platform-do","title":"What does the dashboard of the Onqlave platform do?","text":"<p>The dashboard of the Onqlave platform is provided via a web interface through your browser. With this dashboard, you can perform a wide range of interactions covering all the essential components of the Onqlave platform:</p> <ul> <li>Arx</li> <li>Applications</li> <li>API Keys</li> <li>Accounts</li> <li>Access</li> </ul>"},{"location":"guides/web-app-guide/overview-gui/#explore-more","title":"Explore more","text":"<p>From here, you can begin to create your own:</p> <ul> <li>Arx</li> <li>Application</li> <li>API Key</li> </ul>"},{"location":"guides/web-app-guide/overview-gui/#looking-for-another-way-of-interaction","title":"Looking for another way of interaction?","text":"<p>If this is not your preferred way, consider using the Command Line Interface</p>"},{"location":"guides/web-app-guide/administration/apikey/","title":"API Key","text":""},{"location":"guides/web-app-guide/administration/apikey/#before-you-start","title":"Before you start","text":"<p>API Keys manager allows you to bring your Arx and applications together. The API Keys created here will draw on all of the unique inputs you have created for the Arx and application that you chose.</p> <p>When you create your Access key it is critical that you store it safely and securely, as it will only be displayed once. To preserve the integrity of the key, Onqlave does not keep a record of this. Do not close the final window until you have made this record!</p>"},{"location":"guides/web-app-guide/administration/apikey/#create-an-api-key","title":"Create an API Key","text":"<p>Who can perform this operation?</p> <ul> <li>Platform Owner</li> <li>Developer</li> </ul> <p>To create an api key, firstly, you need to select the associated application...</p> <p></p> <p>... and the associated Arx.</p> <p></p> <p>You will then see a summary menu to review all the necessary information before actually creating an API Key.</p> <p></p> <p>If the creation of the API Key is successful, you should then save the ACCESS KEY in a safe place.</p> <p></p>"},{"location":"guides/web-app-guide/administration/apikey/#view-the-api-key-dashboard","title":"View the API Key dashboard","text":"<p>Who can perform this operation?</p> <ul> <li>Platform Owner</li> <li>Developer</li> </ul> <p>You can browse the API Key dashboard as well as the Arx Dashboard and Application Dashboard.</p> <p></p>"},{"location":"guides/web-app-guide/administration/apikey/#delete-the-api-key","title":"Delete the API Key","text":"<p>Who can perform this operation?</p> <ul> <li>Platform Owner</li> <li>Developer</li> </ul> <p>To delete an API Key, you can simply select the one you wish to remove and and delete it.</p> <p></p> <p>The process is the same as archiving applications and deleting an Arx. However, you also have to input the exact API Key. You can hover above your desired API Key and copy it into the clipboard before deleting.</p> <p></p> <p>After deletion, the API Key dashboard is updated instantly.</p> <p></p>"},{"location":"guides/web-app-guide/administration/apikey/#not-satisfied-yet","title":"Not satisfied yet?","text":"<p>If you have specific requirements, or would like to discuss our development plans in more details, please feel free to reach out to product@onqlave.com or you can directly send us a feedback via the integrated feedback button on the lower right corner of the API Key dashboard.</p> <p></p>"},{"location":"guides/web-app-guide/administration/application/","title":"Application","text":""},{"location":"guides/web-app-guide/administration/application/#before-you-start","title":"Before you start","text":"<p>The Applications page will allow you to create and allocate the unique identifiers for your front and backend applications to be used when creating API Keys. This separated Application workflow ensures you have easy access to enabling, disabling and archiving applications as needed.</p> <p>When the application reference is created, an API token and encryption key is established. Note that Onqlave does not allow you to permanently delete any applications, however they can be archived, which will then disable the respective API token and encryption key.</p>"},{"location":"guides/web-app-guide/administration/application/#create-an-application","title":"Create an application","text":"<p>Who can perform this operation?</p> <ul> <li>Platform Owner</li> </ul> <p>The web app interface provides a convenient way to complete all of the required information during the process of creating an application.</p> <p></p> <p>You can delegate the ownership of your application to another account/user. But please pay attention to the currently supported roles and their available operations.</p> <p></p> <p>You will again be provided with a summary screen to help you review all of the necessary information before actually creating the application.</p> <p></p>"},{"location":"guides/web-app-guide/administration/application/#view-the-application-dashboard","title":"View the application dashboard","text":"<p>Who can perform this operation?</p> <ul> <li>Platform Owner</li> </ul> <p>In the application dashboard, you can see the total number of activated, disabled and archived applications as well as some basic information for each application. You can also select any existing application to modify, disable or archive it.</p> <p></p>"},{"location":"guides/web-app-guide/administration/application/#update-an-application","title":"Update an application","text":"<p>You can also edit some basic information of an application.</p> <p></p>"},{"location":"guides/web-app-guide/administration/application/#enabledisable-an-application","title":"Enable/disable an application","text":"<p>Who can perform this operation?</p> <ul> <li>Platform Owner</li> </ul> <p>You can also enable/disable an application. This is a required step before archiving it. Disabling an application requires you to type in the exact name of that application correctly.</p> <p></p> <p>You need to type exactly the name of the application that you want to disable.</p> <p></p> <p>If the enable/disable process is successful, the status of the selected application will be updated in the application dashboard.</p> <p></p>"},{"location":"guides/web-app-guide/administration/application/#archive-an-application","title":"Archive an application","text":"<p>Who can perform this operation?</p> <ul> <li>Platform Owner</li> </ul> <p>Since we do not support deleting applications, you can archive it. Before archiving an application, you have to disable it (see the step above: 'Enable/disable an application').</p> <p></p> <p>Archiving an application requires you to type in the name of that application correctly.</p> <p></p> <p>If the archiving process is successful then the status of the selected application will be updated in the application dashboard.</p> <p>By toggling the Show Archived switch, you can see the archived applications along with the active applications.</p> <p></p>"},{"location":"guides/web-app-guide/administration/application/#not-satisfied-yet","title":"Not satisfied yet?","text":"<p>If you have specific requirements, or would like to discuss in more details, please feel free to reach out to product@onqlave.com or you can directly send us a feedback via the integrated feedback button on the lower right corner of the application dashboard.</p> <p></p>"},{"location":"guides/web-app-guide/administration/arx/","title":"Arx","text":""},{"location":"guides/web-app-guide/administration/arx/#inspiration","title":"Inspiration","text":"<p>The term Arx is a Latin word meaning Citadel that relates to a fort or a castle providing defence for a place. In the digital world, an arx acts as a castle for the defence of privacy.</p> <p></p>"},{"location":"guides/web-app-guide/administration/arx/#before-you-start","title":"Before you start","text":"<p>If you are familiar with allocating cloud computing resources for your company, you will be familiar with the concept of creating and assigning an arx to support your expected workload. With the Onqlave platform, we follow a similar approach to allow you to optimise for speed and availability.</p>"},{"location":"guides/web-app-guide/administration/arx/#review-the-provided-roles-and-associated-permissions","title":"Review the provided roles and associated permissions","text":"<p>Our current release includes 3 defined roles: Platform Owner, Platform Admin and Developer. Each role has its own set of permissions and supported operations. You may need to first skim through the documentation on roles and supported operations before proceeding.</p>"},{"location":"guides/web-app-guide/administration/arx/#create-an-arx","title":"Create an Arx","text":"<p>Who can perform this operation?</p> <ul> <li>Platform Owner</li> </ul> <p>There are several configurable attributes of an Arx that are grouped into 4 sections:</p> <ul> <li>Planning</li> <li>Cloud Provider</li> <li>Region</li> <li>Encryption mechanism</li> </ul> <p>We will go through all of these 4 configurable sections during the creation process of an Arx.</p>"},{"location":"guides/web-app-guide/administration/arx/#1-choose-your-plan","title":"1. Choose your plan","text":"<p>We support you in segregating the development, testing, staging and production by providing a single purpose arx for each desired environment, including: development, testing, staging, and production.</p> <p></p>"},{"location":"guides/web-app-guide/administration/arx/#2-select-a-provider","title":"2. Select a provider","text":"<p>The choice of cloud provider determines which service is used to store your information. This allows for you to choose a cloud provider that your organisation already uses. At present we only support Google, but more providers are coming soon.</p> <p></p>"},{"location":"guides/web-app-guide/administration/arx/#3-select-your-preferred-region","title":"3. Select your preferred region","text":"<p>The choice of region allows you to determine within which geography you would like the data to reside. This may be an important factor for data localisation / data residency requirements for sensitive data, whilst there can also be additional [speed and efficiency] benefits from having the data reside in the same geography as the rest of your information.</p> <p></p>"},{"location":"guides/web-app-guide/administration/arx/#4-select-your-encryption-primitive","title":"4. Select your encryption primitive","text":"<p>We only offer encryption services based on the highest performance encryption algorithms. You have the choice of AES-GCM-128, AES-GCM-256 or XCHACHA20-POLY1305 with the latter offering stronger encryption but at a lower processing speed.</p> <p>The key rotation frequency determines how regularly the encryption keys are changed. More regular rotations increase the level of security to ensure that your information remains safe.</p> <p></p>"},{"location":"guides/web-app-guide/administration/arx/#5-review-ownership","title":"5. Review Ownership","text":"<p>Before choosing the owner, make sure that you have skimmed through the supported access in this release.</p> <p></p> <p>Once you have completed all of your selections, you can review a summary of the choices before actually creating the Arx.</p> <p></p>"},{"location":"guides/web-app-guide/administration/arx/#view-a-list-of-arx","title":"View a list of Arx","text":"<p>Who can perform this operation?</p> <ul> <li>Platform Owner</li> </ul> <p>The overview of Arx will provide basic information about the total number of Arx as well as their status.</p> <p></p>"},{"location":"guides/web-app-guide/administration/arx/#update-an-arx","title":"Update an Arx","text":"<p>Who can perform this operation?</p> <ul> <li>Platform Owner</li> </ul> <p>There are two elements that you can change for any of your Arx:</p> <ul> <li>Arx's name (in the planning section)</li> <li>The key rotation period (in the encryption section)</li> </ul> <p></p>"},{"location":"guides/web-app-guide/administration/arx/#disable-an-arx","title":"Disable an Arx","text":"<p>Who can perform this operation?</p> <ul> <li>Platform Owner</li> </ul> <p>This feature allows you to temporarily disable an Arx while maintaining the ability to enable it in the future without having to reconfigure everything from scratch.</p> <p></p> <p>The disabling process will require confirmation, including typing the exact name of the Arx before proceeding to the next step.</p> <p></p> <p>If the disabling process is successful, you can see the status of the selected Arx will have updated.</p>"},{"location":"guides/web-app-guide/administration/arx/#delete-an-arx","title":"Delete an Arx","text":"<p>Who can perform this operation?</p> <ul> <li>Platform Owner</li> </ul> <p>To completely delete an Arx, you have to go through the same process as disabling...</p> <p></p> <p>... which also includes typing the exact name of the Arx.</p> <p></p> <p>If successful, the number of remaining Arx will be updated instantly in the Arx dashboard.</p>"},{"location":"guides/web-app-guide/administration/arx/#not-satisfied-yet","title":"Not satisfied yet?","text":"<p>If you have specific requirements, or would like to discuss our development plans in more details, please feel free to reach out to product@onqlave.com or you can directly send us a feedback via the integrated feedback button on the lower right corner of the Arx dashboard.</p> <p></p>"},{"location":"guides/web-app-guide/platform/access/","title":"Access","text":""},{"location":"guides/web-app-guide/platform/access/#description","title":"Description","text":"<p>This section is dedicated to managing the participating users in your organisation.</p>"},{"location":"guides/web-app-guide/platform/access/#access-dashboard","title":"Access Dashboard","text":"<p>A dashboard is provided for you to conveniently explore the basic information of your managed users.</p> <p></p>"},{"location":"guides/web-app-guide/platform/access/#add-invite-a-new-user","title":"Add &amp; invite a new user","text":"<p>You can add your a user into your managed tenant. When successfully adding a user to your system, Onqlave will automatically send an invitation email with an activation link to the provided user email address.</p> <p>The most important part when you add a new user to your managed platform is assigning roles. Currently we support three roles:</p> <ul> <li>Platform Owner</li> <li>Platform Admin</li> <li>Developer</li> </ul> <p></p>"},{"location":"guides/web-app-guide/platform/access/#currently-supported-operations-for-each-role","title":"Currently supported operations for each role","text":""},{"location":"guides/web-app-guide/platform/access/#1-platform-owner","title":"1. Platform Owner","text":""},{"location":"guides/web-app-guide/platform/access/#access","title":"Access","text":"<ul> <li>Create new access/inviting users</li> <li>Delete access</li> </ul>"},{"location":"guides/web-app-guide/platform/access/#arx","title":"Arx","text":"<ul> <li>Create</li> <li>Read information &amp; status</li> <li>Update information &amp; status</li> <li>Enable/Disable</li> <li>Delete</li> </ul>"},{"location":"guides/web-app-guide/platform/access/#application","title":"Application","text":"<ul> <li>Create</li> <li>Read information &amp; status</li> <li>Update information</li> <li>Enable/Disable</li> <li>Archive/Unarchive</li> </ul>"},{"location":"guides/web-app-guide/platform/access/#apikey","title":"APIKey","text":"<ul> <li>Create</li> <li>Read information</li> <li>Delete</li> </ul>"},{"location":"guides/web-app-guide/platform/access/#2-developer","title":"2. Developer","text":""},{"location":"guides/web-app-guide/platform/access/#apikey_1","title":"APIKey","text":"<ul> <li>Create</li> <li>Read information</li> <li>Delete</li> </ul>"},{"location":"guides/web-app-guide/platform/account/","title":"Account","text":""},{"location":"guides/web-app-guide/platform/account/#description","title":"Description","text":"<p>This section will help you manage your account information divided into three subsections:</p> <ul> <li>Profile</li> <li>Security</li> <li>Organisation</li> </ul>"},{"location":"guides/web-app-guide/platform/account/#account-profile","title":"Account Profile","text":"<p>Every account detail is available to update in this section except for the registered email address.</p> <p></p>"},{"location":"guides/web-app-guide/platform/account/#account-security","title":"Account Security","text":"<p>At the current release, we provide basic security features for your account including password management.</p> <p></p>"},{"location":"guides/web-app-guide/platform/account/#account-organisation","title":"Account Organisation","text":"<p>Within the sccount section you may only update the organisation name and label, or delete the organisation.</p> <p></p>"},{"location":"introduction/architecture/","title":"Introduction","text":"<p>The Onqlave Encryption Engine (OE2) is a set of infrastructure and SDKs provided to you as a service, letting you easily and efficiently encrypt sensitive data in your platform before it leaves your security boundaries. The Onqlave Encryption Engine (OE2) provides you with a state of the art cloud agnostic key management solution which simplifies the daunting task of managing your encryption keys whilst providing you with the best practices when it comes to protecting your sensitive data. You specify which primitive you would like to use based on your use case and leave the rest to us. We manage the master encryption key, issue data encryption keys, wrap them with proper keys without storing any of the keys on our platform. You then use our provided SDKs which securely connect to our infrastructure to get the keys, and encrypt and sign to ensure the authenticity of your data. Using our technology helps ensure that your plaintext data isn\u2019t available to any third party, including Onqlave, your cloud or infrastructure provider.</p> <p>This developer guide provides a conceptual overview of the Onqlave Encryption Engine (OE2), including an introduction to its architecture, details about how it protects your data, how it differs from server-side encryption, and guidance on selecting critical components for your application to help you get started.</p>"},{"location":"introduction/architecture/#benefits","title":"Benefits","text":"<p>The Onqlave Encryption Engine (OE2) has the following benefits:</p> <ul> <li> <p>Designed especially for security and ease of use. You don\u2019t need to be a cryptography expert to use the Onqlave Encryption Engine (OE2). The implementations include helper methods that are designed to work with your existing applications. After you create and configure the required components, the SDKs transparently encrypts and signs your data before you store them in your storage, and verifies and decrypts them when you retrieve them.</p> </li> <li> <p>Designed to be infrastructure and cloud agnostic. When you use the Onqlave Encryption Engine (OE2), you are not bound to a specific cloud provider or specific implementation by a cloud provider as it is delivered as a service (think of it as any other <code>software as a service</code> you use). you can integrate it with any application, whether in cloud or on-premise, developed in any technology of your choice. We are building SDKs for majority of the mainstream programming languages.</p> </li> <li> <p>Includes secure encryption and signing. The Onqlave Encryption Engine (OE2) includes secure implementations that encrypt your data using a unique data encryption key, and then sign data to protect it against unauthorised changes.</p> </li> <li> <p>Uses cryptographic materials provided by the Onqlave platform.  The Onqlave Encryption Engine (OE2) uses Onqlave crypto infrastructure to generate, encrypt, and decrypt the unique data encryption key that protects your sensitive data. We automatically issue wrapping keys that encrypt that data key. The Onqlave Encryption Engine (OE2) frees you from cloud restriction as it doesn't require an AWS, GCP or Azure account or any service provided by them.</p> </li> <li> <p>Support for cryptographic materials caching (coming soon). The Onqlave Encryption Engine (OE2) provides a bespoke key caching solution that reduces the number of calls to our infrastructure. It allows you to protect your cryptographic materials under a symmetric encryption key without calling Onqlave infrastructure every time you encrypt or decrypt data. This is a good choice for applications that need to minimise latency in their encryption process.</p> </li> <li> <p>Format Preserving Encryption (FPE) (coming soon). You can design databases that can search encrypted records without decrypting the entire database. Depending on your threat model and requirements, you can use FPE to perform exact match searches or more customised complex queries on your encrypted database.</p> </li> <li> <p>Support for multitenant database schemas. The Onqlave Encryption Engine (OE2) enables you to protect data stored in your platform by isolating each tenant with distinct encryption materials. If you have multiple customers performing encrypt operations within your platform, use different Onqlave Arx to provide each customer with a distinct material to use in their cryptographic operations.</p> </li> <li> <p>End-to-end encryption. Everything in your Onqlave Encryption Engine (OE2) account is always end-to-end encrypted. This makes it impossible for someone to learn anything by intercepting your data while it\u2019s in transit or even obtaining it from Onqlave.</p> </li> <li> <p>256-bit AES encryption. Your data is kept safe by <code>AES-GCM-256 authenticated encryption</code> on the Onqlave Encryption Engine (OE2). The data you entrust to Onqlave is effectively impossible to decrypt.</p> </li> <li> <p>Secure random numbers. Encryption keys, initialization vectors, and nonces are all generated using <code>cryptographically secure pseudorandom number generators</code>.</p> </li> <li> <p>Principled privacy policy. The Onqlave Encryption Engine (OE2) was designed with a deep respect for your privacy. Any information you share with us is only ever used to provide you with service and support.</p> </li> </ul>"},{"location":"introduction/architecture/#concepts","title":"Concepts","text":"<p>This topic explains the concepts and terminology used in the Onqlave Encryption Engine (OE2).</p>"},{"location":"introduction/architecture/#envelope-encryption","title":"Envelope encryption","text":"<p>Storing and encrypting data at scale requires using a central cryptographic key management service with multiple layers of keys for the encrypted data. An example of multiple layer of keys is envelope encryption, which is the process of encrypting a key with another key. The Onqlave Encryption Engine (OE2) uses Master encryption keys (MEK) to protect Data encryption keys. The Onqlave Encryption Engine (OE2) uses Polymorphic encryption to ensure that every encryption gets its own unique Data encryption keys.</p>"},{"location":"introduction/architecture/#data-encryption-key","title":"Data encryption key","text":"<p>A data encryption key is an encryption key that the Onqlave Encryption Engine (OE2) SDK uses to encrypt the data. Each data encryption key is a byte array that conforms to the encryption method of your Onqlave Arx. You don't need to specify, generate, implement, extend, protect, or use data encryption keys. The Onqlave Encryption Engine (OE2) implicitly does that work for you when you call the encrypt and decrypt operations.</p>"},{"location":"introduction/architecture/#master-encryption-key","title":"Master encryption key","text":"<p>A Master encryption key, also known as key encryption key is a key that the Onqlave Encryption Engine (OE2) uses to encrypt the Data encryption keys that encrypts your data.</p>"},{"location":"introduction/architecture/#symmetric-and-asymmetric-encryption","title":"Symmetric and asymmetric encryption","text":"<p>Symmetric encryption uses the same key to encrypt and decrypt data. Asymmetric encryption uses a mathematically related data key pair. One key in the pair encrypts the data; only the other key in the pair can decrypt the data. The Onqlave Encryption Engine (OE2) uses envelope encryption. It encrypts your data with a symmetric data key. It encrypts the symmetric data key with one or more symmetric or asymmetric wrapping keys.</p> <ul> <li>Encrypting your data (symmetric encryption): To encrypt your data, the Onqlave Encryption Engine (OE2) SDK uses a symmetric data key and an algorithm specified by your configuration of Onqlave Arx that includes a symmetric encryption algorithm. To decrypt the data, the Onqlave Encryption Engine (OE2) SDK uses the same data key and the same algorithm suite.</li> </ul>"},{"location":"introduction/architecture/#polymorphic-encryption","title":"Polymorphic encryption","text":"<p>The Onqlave Encryption Engine (OE2) makes sure every encryption operation gets its own unique Data encryption key to preserve the security and privacy of your data. The technique is called <code>Polymorphic encryption</code>.</p>"},{"location":"introduction/architecture/#encryption-primitives","title":"Encryption primitives","text":"<p>Authenticated Encryption (AE) is an encryption scheme which simultaneously assures the data confidentiality (also known as privacy: encrypted message is impossible to understand without the knowledge of a secret key) and authenticity (it is unforgeable the encrypted message includes an authentication tag that the sender can calculate only if she possesses secret key). Examples of encryption modes that provide AE are GCM, CCM. The Onqlave Encryption Engine (OE2) and extended version of AE called Authenticated Encryption with Additional Data (AEAD) in order to create Data encryption keys. Additional Authenticated Data (AAD) is bound to the encrypted data, because you cannot decrypt the ciphertext unless you know the AAD, but it is not stored as part of the ciphertext. AAD also does not increase the cryptographic strength of the ciphertext. Instead it is an additional check by The Onqlave Encryption Engine (OE2) SDK to authenticate a decryption request. The Onqlave Encryption Engine (OE2) SDK uses Authenticated Encryption with Additional Data (AEAD) for all encryption operations, so that it guarantees the confidentiality as well as the integrity of the keys provided for each tenant.  </p>"},{"location":"introduction/architecture/#how-it-works","title":"How it works","text":"<p>As explained in the Introduction, The Onqlave platform is comprised of two major parts: The Onqlave Encryption Engine (OE2) which is responsible for managing your keys, and The Onqlave Encryption Engine (OE2) SDK which is used to integrate OE2 with your applications.  </p> <p>The Onqlave Encryption Engine (OE2) SDK provides client-side encryption libraries that are designed specifically to protect your sensitive data. The libraries include secure implementations that you can extend or use unchanged. For more information about using SDKs, see our SDK documentation for your programming language.</p> <p>The workflows in this section explain how the Onqlave Encryption Engine (OE2) SDK encrypts and signs and decrypts and verifies the data in your applications. These workflows describe the basic process using abstract elements and the default features. For details about how the Onqlave Encryption Engine (OE2) SDK works with your programming language, see our GitHub repositories.</p> <p>The Onqlave Encryption Engine (OE2) SDK uses envelope encryption to protect your data. Each record is encrypted under a unique data encryption key provided by the Onqlave platform. To decrypt the encrypted record, the Onqlave Encryption Engine (OE2) SDK communicates with the Onqlave platform to decrypt the data encryption key using the master encryption keys assigned to the Onqlave Arx. Then it can decrypt the ciphertext and return a plaintext entry.</p> <p>For more information about the terms used in the Onqlave Encryption Engine, see Concepts.</p>"},{"location":"introduction/architecture/#encrypt-and-sign","title":"Encrypt and sign","text":"<p>At its core, the Onqlave Encryption Engine (OE2) SDK is a record encryptor that encrypts, signs, verifies, and decrypts the records in your dataset. It gets the encryption materials, and instructions on how to use them, from the Onqlave platform and uses them to encrypt the data.</p> <p>The following walkthrough describes how the Onqlave Encryption Engine (OE2) SDK encrypts and signs your data entries.</p> <ol> <li>The Onqlave platform provides the Onqlave Encryption Engine (OE2) SDK with unique data encryption key: one wrapped data encryption key, a copy of the data key encrypted wrapped in an ephemeral encrypted asymmetric key.</li> <li>The encryption method encrypts data you specified.</li> <li>The encryption method encapsulates the encrypted data encryption key, algorithm information and the actual cipher data in a data encryption packet.</li> <li>The encryption method signs the data encyption packet using additional data provided by you.</li> <li>The encryption method returns the encrypted and signed cipher packet to the caller.  </li> </ol>"},{"location":"introduction/architecture/#decrypt-and-verify","title":"Decrypt and verify","text":"<ol> <li>The decryption method extracts the encrypted data encryption key from cipher packet.</li> <li>The decryption method extracts the encryption algorithm including initialisation vector and tags</li> <li>The decryption method contacts the Onqlave platform to decrypt the encrypted data encryption key.</li> <li>The Onqlave platform returns the data encryption key, wrapped in an ethemeral encrypted assymetric key.</li> <li>The decryption method identifies the data in the cipher packet received as input.</li> <li>The decryption method unwraps the data encryption key, and use it to decrypt the data.</li> <li>The decryption method verifies the integrity of the data using additional data provided by you.</li> <li>The decryption method returns the decrypted and verified plain data to the caller.  </li> </ol>"},{"location":"introduction/architecture/#reporting-a-vulnerability","title":"Reporting a Vulnerability","text":"<p>If you discover a potential security issue in this project, please reach out to us at security@onqlave.com. Please do not create public GitHub issues or Pull Requests, as malicious actors could potentially view them.</p>"},{"location":"welcome/welcome/","title":"Welcome","text":""},{"location":"welcome/welcome/#what-will-you-get","title":"What will you get?","text":"<p>Users of the platform can achieve a distributed trust architecture. Your data is encrypted before it leaves your platform, and Onqlave only holds the encryption keys, therefore neither your cloud provider nor Onqlave see any sensitive data you choose to encrypt, only ciphertext. </p>"},{"location":"welcome/welcome/#how-can-we-achieve-it","title":"How can we achieve it?","text":"<p>The design ensures data is never exposed to those without access, while reducing the reliance on your cloud provider, as this alone is not enough to prevent attackers and inside threats.</p> <p>Our tools are designed to help you achieve protection with minimal effort. We have developed  and tested quick workflows in our WebApp and CLI, to enable your engineers to rapidly protect and continually manage your data.</p> <p>We have designed Onqlave to be resilient, performant and scalable, whilst minimising the complexities of key management and cryptography. </p>"},{"location":"welcome/welcome/#we-value-your-feedback","title":"We value your feedback","text":"<p>We are excited for you to be part of the Onqlave alpha release. We have been working towards delivering initial features which will form the foundation of an extensive suite of data protection and privacy capabilities in the near future. </p> <p>On the bottom right corner of any menu, you can see the Provide Feedback button.</p> <p></p> <p>By clicking on it, a dialog will appear and let you enter your own comments and thoughts on which part of our product that needs to be improved.</p> <p></p> <p>In addition, we welcome any and all feedback you have either through WebApp or at product@onqlave.com.</p>"}]}